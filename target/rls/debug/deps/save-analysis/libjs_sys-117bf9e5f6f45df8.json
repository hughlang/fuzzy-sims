{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25","program":"/Users/hugh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","js_sys","/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=117bf9e5f6f45df8","-C","extra-filename=-117bf9e5f6f45df8","--out-dir","/Sandbox/fuzzy/cf-dev/fzd-sims/target/rls/debug/deps","-L","dependency=/Sandbox/fuzzy/cf-dev/fzd-sims/target/rls/debug/deps","--extern","wasm_bindgen=/Sandbox/fuzzy/cf-dev/fzd-sims/target/rls/debug/deps/libwasm_bindgen-66cf78034b95fb9c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/hugh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Sandbox/fuzzy/cf-dev/fzd-sims/target/rls/debug/deps/libjs_sys-117bf9e5f6f45df8.rmeta"},"prelude":{"crate_id":{"name":"js_sys","disambiguator":[6694803863749872165,8898157333117907232]},"crate_root":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src","external_crates":[{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11705364677140973079,7726573435499814070]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9133280923345920065,5169035037401655959]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9811081489243518189,10016862334390338995]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16815776717140451016,2925157999366951619]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5571127662207602070,12081818010283277997]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9872675523737343627,13016261367480270594]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5564630398057371063,5134587089964058144]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[7317189895424764231,14908133925595887831]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7982293983073241509,18348097174152154939]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3938710137457602349,12366108798000803370]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[124527115135685225,16528639863833681107]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14633564717342525671,15444589222019281189]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":13,"id":{"name":"wasm_bindgen","disambiguator":[5800004859494013299,8205699332090406180]}},{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","num":14,"id":{"name":"wasm_bindgen_macro","disambiguator":[12929983633350495363,10796424485541969509]}}],"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":0,"byte_end":233190,"line_start":1,"line_end":4719,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":0,"byte_end":233190,"line_start":1,"line_end":4719,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":309},{"krate":0,"index":318},{"krate":0,"index":316},{"krate":0,"index":313},{"krate":0,"index":311},{"krate":0,"index":139},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":393},{"krate":0,"index":402},{"krate":0,"index":400},{"krate":0,"index":397},{"krate":0,"index":395},{"krate":0,"index":320},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":474},{"krate":0,"index":478},{"krate":0,"index":476},{"krate":0,"index":404},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":16},{"krate":0,"index":581},{"krate":0,"index":588},{"krate":0,"index":585},{"krate":0,"index":583},{"krate":0,"index":515},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":744},{"krate":0,"index":753},{"krate":0,"index":751},{"krate":0,"index":748},{"krate":0,"index":746},{"krate":0,"index":590},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":831},{"krate":0,"index":840},{"krate":0,"index":838},{"krate":0,"index":835},{"krate":0,"index":833},{"krate":0,"index":755},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":909},{"krate":0,"index":918},{"krate":0,"index":916},{"krate":0,"index":913},{"krate":0,"index":911},{"krate":0,"index":842},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":1024},{"krate":0,"index":1033},{"krate":0,"index":1031},{"krate":0,"index":1028},{"krate":0,"index":1026},{"krate":0,"index":920},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":26},{"krate":0,"index":1102},{"krate":0,"index":1111},{"krate":0,"index":1109},{"krate":0,"index":1106},{"krate":0,"index":1104},{"krate":0,"index":1035},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1195},{"krate":0,"index":1204},{"krate":0,"index":1202},{"krate":0,"index":1199},{"krate":0,"index":1197},{"krate":0,"index":1113},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1271},{"krate":0,"index":1275},{"krate":0,"index":1273},{"krate":0,"index":1215},{"krate":0,"index":1268},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":1398},{"krate":0,"index":1407},{"krate":0,"index":1405},{"krate":0,"index":1402},{"krate":0,"index":1400},{"krate":0,"index":1334},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":59},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1479},{"krate":0,"index":1533},{"krate":0,"index":1536},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":61},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":1816},{"krate":0,"index":1825},{"krate":0,"index":1823},{"krate":0,"index":1820},{"krate":0,"index":1818},{"krate":0,"index":1614},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1723},{"krate":0,"index":1726},{"krate":0,"index":1729},{"krate":0,"index":1732},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1777},{"krate":0,"index":1780},{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1801},{"krate":0,"index":1804},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1813},{"krate":0,"index":1972},{"krate":0,"index":1976},{"krate":0,"index":1974},{"krate":0,"index":1827},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1930},{"krate":0,"index":1933},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":2036},{"krate":0,"index":2040},{"krate":0,"index":2038},{"krate":0,"index":1978},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2109},{"krate":0,"index":2118},{"krate":0,"index":2116},{"krate":0,"index":2113},{"krate":0,"index":2111},{"krate":0,"index":2042},{"krate":0,"index":2094},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2106},{"krate":0,"index":2187},{"krate":0,"index":2196},{"krate":0,"index":2194},{"krate":0,"index":2191},{"krate":0,"index":2189},{"krate":0,"index":2120},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":71},{"krate":0,"index":2378},{"krate":0,"index":2387},{"krate":0,"index":2385},{"krate":0,"index":2382},{"krate":0,"index":2380},{"krate":0,"index":2236},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2306},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2468},{"krate":0,"index":2477},{"krate":0,"index":2475},{"krate":0,"index":2472},{"krate":0,"index":2470},{"krate":0,"index":2389},{"krate":0,"index":2441},{"krate":0,"index":2444},{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2479},{"krate":0,"index":2482},{"krate":0,"index":2485},{"krate":0,"index":2555},{"krate":0,"index":2564},{"krate":0,"index":2562},{"krate":0,"index":2559},{"krate":0,"index":2557},{"krate":0,"index":2488},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":2633},{"krate":0,"index":2642},{"krate":0,"index":2640},{"krate":0,"index":2637},{"krate":0,"index":2635},{"krate":0,"index":2566},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2711},{"krate":0,"index":2720},{"krate":0,"index":2718},{"krate":0,"index":2715},{"krate":0,"index":2713},{"krate":0,"index":2644},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2795},{"krate":0,"index":2804},{"krate":0,"index":2802},{"krate":0,"index":2799},{"krate":0,"index":2797},{"krate":0,"index":2722},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2876},{"krate":0,"index":2885},{"krate":0,"index":2883},{"krate":0,"index":2880},{"krate":0,"index":2878},{"krate":0,"index":2806},{"krate":0,"index":2858},{"krate":0,"index":2861},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":3678},{"krate":0,"index":3685},{"krate":0,"index":3682},{"krate":0,"index":3680},{"krate":0,"index":3439},{"krate":0,"index":3492},{"krate":0,"index":3495},{"krate":0,"index":3498},{"krate":0,"index":3501},{"krate":0,"index":3504},{"krate":0,"index":3507},{"krate":0,"index":3510},{"krate":0,"index":3513},{"krate":0,"index":3516},{"krate":0,"index":3519},{"krate":0,"index":3522},{"krate":0,"index":3525},{"krate":0,"index":3528},{"krate":0,"index":3531},{"krate":0,"index":3534},{"krate":0,"index":3537},{"krate":0,"index":3540},{"krate":0,"index":3543},{"krate":0,"index":3546},{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3555},{"krate":0,"index":3558},{"krate":0,"index":3561},{"krate":0,"index":3564},{"krate":0,"index":3567},{"krate":0,"index":3570},{"krate":0,"index":3573},{"krate":0,"index":3576},{"krate":0,"index":3579},{"krate":0,"index":3582},{"krate":0,"index":3585},{"krate":0,"index":3588},{"krate":0,"index":3591},{"krate":0,"index":3594},{"krate":0,"index":3597},{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3606},{"krate":0,"index":3609},{"krate":0,"index":3612},{"krate":0,"index":3615},{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":3624},{"krate":0,"index":3627},{"krate":0,"index":3630},{"krate":0,"index":3633},{"krate":0,"index":3636},{"krate":0,"index":3639},{"krate":0,"index":3642},{"krate":0,"index":3645},{"krate":0,"index":3648},{"krate":0,"index":3651},{"krate":0,"index":3654},{"krate":0,"index":3657},{"krate":0,"index":3660},{"krate":0,"index":3663},{"krate":0,"index":3666},{"krate":0,"index":3669},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":77},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":3785},{"krate":0,"index":3789},{"krate":0,"index":3787},{"krate":0,"index":3687},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3755},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3782},{"krate":0,"index":110},{"krate":0,"index":4188},{"krate":0,"index":4192},{"krate":0,"index":4190},{"krate":0,"index":4103},{"krate":0,"index":4155},{"krate":0,"index":4158},{"krate":0,"index":4161},{"krate":0,"index":4164},{"krate":0,"index":4167},{"krate":0,"index":4170},{"krate":0,"index":4173},{"krate":0,"index":4176},{"krate":0,"index":4179},{"krate":0,"index":4182},{"krate":0,"index":4185},{"krate":0,"index":112},{"krate":0,"index":118},{"krate":0,"index":4415},{"krate":0,"index":4419},{"krate":0,"index":4417},{"krate":0,"index":4318},{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4391},{"krate":0,"index":4394},{"krate":0,"index":4397},{"krate":0,"index":4400},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4409},{"krate":0,"index":4412},{"krate":0,"index":4264},{"krate":0,"index":4267},{"krate":0,"index":4518},{"krate":0,"index":4522},{"krate":0,"index":4520},{"krate":0,"index":4421},{"krate":0,"index":4473},{"krate":0,"index":4476},{"krate":0,"index":4479},{"krate":0,"index":4482},{"krate":0,"index":4485},{"krate":0,"index":4488},{"krate":0,"index":4491},{"krate":0,"index":4494},{"krate":0,"index":4497},{"krate":0,"index":4500},{"krate":0,"index":4503},{"krate":0,"index":4506},{"krate":0,"index":4509},{"krate":0,"index":4512},{"krate":0,"index":4515},{"krate":0,"index":4270},{"krate":0,"index":4273},{"krate":0,"index":4621},{"krate":0,"index":4625},{"krate":0,"index":4623},{"krate":0,"index":4524},{"krate":0,"index":4576},{"krate":0,"index":4579},{"krate":0,"index":4582},{"krate":0,"index":4585},{"krate":0,"index":4588},{"krate":0,"index":4591},{"krate":0,"index":4594},{"krate":0,"index":4597},{"krate":0,"index":4600},{"krate":0,"index":4603},{"krate":0,"index":4606},{"krate":0,"index":4609},{"krate":0,"index":4612},{"krate":0,"index":4615},{"krate":0,"index":4618},{"krate":0,"index":4276},{"krate":0,"index":4279},{"krate":0,"index":4724},{"krate":0,"index":4728},{"krate":0,"index":4726},{"krate":0,"index":4627},{"krate":0,"index":4679},{"krate":0,"index":4682},{"krate":0,"index":4685},{"krate":0,"index":4688},{"krate":0,"index":4691},{"krate":0,"index":4694},{"krate":0,"index":4697},{"krate":0,"index":4700},{"krate":0,"index":4703},{"krate":0,"index":4706},{"krate":0,"index":4709},{"krate":0,"index":4712},{"krate":0,"index":4715},{"krate":0,"index":4718},{"krate":0,"index":4721},{"krate":0,"index":4282},{"krate":0,"index":4285},{"krate":0,"index":4827},{"krate":0,"index":4831},{"krate":0,"index":4829},{"krate":0,"index":4730},{"krate":0,"index":4782},{"krate":0,"index":4785},{"krate":0,"index":4788},{"krate":0,"index":4791},{"krate":0,"index":4794},{"krate":0,"index":4797},{"krate":0,"index":4800},{"krate":0,"index":4803},{"krate":0,"index":4806},{"krate":0,"index":4809},{"krate":0,"index":4812},{"krate":0,"index":4815},{"krate":0,"index":4818},{"krate":0,"index":4821},{"krate":0,"index":4824},{"krate":0,"index":4288},{"krate":0,"index":4291},{"krate":0,"index":4930},{"krate":0,"index":4934},{"krate":0,"index":4932},{"krate":0,"index":4833},{"krate":0,"index":4885},{"krate":0,"index":4888},{"krate":0,"index":4891},{"krate":0,"index":4894},{"krate":0,"index":4897},{"krate":0,"index":4900},{"krate":0,"index":4903},{"krate":0,"index":4906},{"krate":0,"index":4909},{"krate":0,"index":4912},{"krate":0,"index":4915},{"krate":0,"index":4918},{"krate":0,"index":4921},{"krate":0,"index":4924},{"krate":0,"index":4927},{"krate":0,"index":4294},{"krate":0,"index":4297},{"krate":0,"index":5033},{"krate":0,"index":5037},{"krate":0,"index":5035},{"krate":0,"index":4936},{"krate":0,"index":4988},{"krate":0,"index":4991},{"krate":0,"index":4994},{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":5003},{"krate":0,"index":5006},{"krate":0,"index":5009},{"krate":0,"index":5012},{"krate":0,"index":5015},{"krate":0,"index":5018},{"krate":0,"index":5021},{"krate":0,"index":5024},{"krate":0,"index":5027},{"krate":0,"index":5030},{"krate":0,"index":4300},{"krate":0,"index":4303},{"krate":0,"index":5136},{"krate":0,"index":5140},{"krate":0,"index":5138},{"krate":0,"index":5039},{"krate":0,"index":5091},{"krate":0,"index":5094},{"krate":0,"index":5097},{"krate":0,"index":5100},{"krate":0,"index":5103},{"krate":0,"index":5106},{"krate":0,"index":5109},{"krate":0,"index":5112},{"krate":0,"index":5115},{"krate":0,"index":5118},{"krate":0,"index":5121},{"krate":0,"index":5124},{"krate":0,"index":5127},{"krate":0,"index":5130},{"krate":0,"index":5133},{"krate":0,"index":4306},{"krate":0,"index":4309},{"krate":0,"index":5239},{"krate":0,"index":5243},{"krate":0,"index":5241},{"krate":0,"index":5142},{"krate":0,"index":5194},{"krate":0,"index":5197},{"krate":0,"index":5200},{"krate":0,"index":5203},{"krate":0,"index":5206},{"krate":0,"index":5209},{"krate":0,"index":5212},{"krate":0,"index":5215},{"krate":0,"index":5218},{"krate":0,"index":5221},{"krate":0,"index":5224},{"krate":0,"index":5227},{"krate":0,"index":5230},{"krate":0,"index":5233},{"krate":0,"index":5236},{"krate":0,"index":4312},{"krate":0,"index":4315}],"decl_id":null,"docs":" Bindings to JavaScript's standard, built-in objects, including their methods\n and properties.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":119},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":2153,"byte_end":2163,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"decode_uri","qualname":"::decode_uri","value":"fn (encoded: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `decodeURI()` function decodes a Uniform Resource Identifier (URI)\n previously created by `encodeURI` or by a similar routine.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":2585,"byte_end":2605,"line_start":61,"line_end":61,"column_start":12,"column_end":32},"name":"decode_uri_component","qualname":"::decode_uri_component","value":"fn (encoded: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The decodeURIComponent() function decodes a Uniform Resource Identifier (URI) component\n previously created by encodeURIComponent or by a similar routine.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":3178,"byte_end":3188,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"encode_uri","qualname":"::encode_uri","value":"fn (decoded: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `encodeURI()` function encodes a Uniform Resource Identifier (URI)\n by replacing each instance of certain characters by one, two, three, or\n four escape sequences representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two\n \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":125},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":3771,"byte_end":3791,"line_start":80,"line_end":80,"column_start":12,"column_end":32},"name":"encode_uri_component","qualname":"::encode_uri_component","value":"fn (decoded: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The encodeURIComponent() function encodes a Uniform Resource Identifier (URI) component\n by replacing each instance of certain characters by one, two, three, or four escape sequences\n representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":4063,"byte_end":4067,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"eval","qualname":"::eval","value":"fn (js_source_text: &str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `eval()` function evaluates JavaScript code represented as a string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":4459,"byte_end":4468,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"is_finite","qualname":"::is_finite","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global isFinite() function determines whether the passed value is a finite number.\n If  needed, the parameter is first converted to a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":4848,"byte_end":4857,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"parse_int","qualname":"::parse_int","value":"fn (text: &str, radix: u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `parseInt()` function parses a string argument and returns an integer\n of the specified radix (the base in mathematical numeral systems), or NaN on error.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":5187,"byte_end":5198,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"parse_float","qualname":"::parse_float","value":"fn (text: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The parseFloat() function parses an argument and returns a floating point number,\n or NaN on error.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":5517,"byte_end":5523,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"escape","qualname":"::escape","value":"fn (string: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The escape() function computes a new string in which certain characters have been\n replaced by a hexadecimal escape sequence.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6016,"byte_end":6024,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"unescape","qualname":"::unescape","value":"fn (string: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The unescape() function computes a new string in which hexadecimal escape\n sequences are replaced with the character that it represents. The escape sequences might\n be introduced by a function like escape. Usually, decodeURI or decodeURIComponent\n are preferred over unescape.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":309},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6217,"byte_end":6222,"line_start":131,"line_end":131,"column_start":14,"column_end":19},"name":"Array","qualname":"::Array","value":"Array {  }","parent":null,"children":[{"krate":0,"index":310}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6078,"byte_end":6079,"line_start":127,"line_end":127,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6303,"byte_end":6306,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<Array>::new","value":"fn () -> Array","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty array","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6505,"byte_end":6509,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"from","qualname":"<Array>::from","value":"fn (val: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.from()` method creates a new, shallow-copied `Array` instance\n from an array-like or iterable object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6886,"byte_end":6897,"line_start":147,"line_end":147,"column_start":12,"column_end":23},"name":"copy_within","qualname":"<Array>::copy_within","value":"fn (&self, target: i32, start: i32, end: i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The copyWithin() method shallow copies part of an array to another\n location in the same array and returns it, without modifying its size.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":7283,"byte_end":7289,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"concat","qualname":"<Array>::concat","value":"fn (&self, array: &Array) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The concat() method is used to merge two or more arrays. This method\n does not change the existing arrays, but instead returns a new array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":7626,"byte_end":7631,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"every","qualname":"<Array>::every","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The every() method tests whether all elements in the array pass the test\n implemented by the provided function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":8036,"byte_end":8040,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"fill","qualname":"<Array>::fill","value":"fn (&self, value: &JsValue, start: u32, end: u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":8408,"byte_end":8414,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"filter","qualname":"<Array>::filter","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> bool) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `filter()` method creates a new array with all elements that pass the\n test implemented by the provided function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":8834,"byte_end":8838,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"find","qualname":"<Array>::find","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> bool) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `find()` method returns the value of the first element in the array that satisfies\n  the provided testing function. Otherwise `undefined` is returned.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":9279,"byte_end":9289,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"find_index","qualname":"<Array>::find_index","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The findIndex() method returns the index of the first element in the array that\n satisfies the provided testing function. Otherwise -1 is returned.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":9679,"byte_end":9683,"line_start":196,"line_end":196,"column_start":12,"column_end":16},"name":"flat","qualname":"<Array>::flat","value":"fn (&self, depth: i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The flat() method creates a new array with all sub-array elements concatenated into it\n recursively up to the specified depth.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":10041,"byte_end":10049,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"flat_map","qualname":"<Array>::flat_map","value":"fn (&self, callback: &mut dyn FnMut(JsValue, u32, Array) -> Vec<JsValue>) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The flatMap() method first maps each element using a mapping function, then flattens\n the result into a new array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":10440,"byte_end":10448,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(JsValue, u32, Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once for each array element.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":10818,"byte_end":10826,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"includes","qualname":"<Array>::includes","value":"fn (&self, value: &JsValue, from_index: i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The includes() method determines whether an array includes a certain\n element, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":11216,"byte_end":11224,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"index_of","qualname":"<Array>::index_of","value":"fn (&self, value: &JsValue, from_index: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The indexOf() method returns the first index at which a given element\n can be found in the array, or -1 if it is not present.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":11574,"byte_end":11582,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Array>::is_array","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Array.isArray() method determines whether the passed value is an Array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":11908,"byte_end":11912,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"join","qualname":"<Array>::join","value":"fn (&self, delimiter: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The join() method joins all elements of an array (or an array-like object)\n into a string and returns this string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":12364,"byte_end":12377,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<Array>::last_index_of","value":"fn (&self, value: &JsValue, from_index: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The lastIndexOf() method returns the last index at which a given element\n can be found in the array, or -1 if it is not present. The array is\n searched backwards, starting at fromIndex.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":12892,"byte_end":12898,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"length","qualname":"<Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of an object which is an instance of type Array\n sets or returns the number of elements in that array. The value is an\n unsigned, 32-bit integer that is always numerically greater than the\n highest index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":13520,"byte_end":13523,"line_start":266,"line_end":266,"column_start":12,"column_end":15},"name":"map","qualname":"<Array>::map","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" map calls a provided callback function once for each element in an array,\n in order, and constructs a new array from the results. callback is invoked\n only for indexes of the array which have assigned values, including undefined.\n It is not called for missing elements of the array (that is, indexes that have\n never been set, which have been deleted or which have never been assigned a value).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":14472,"byte_end":14475,"line_start":284,"line_end":284,"column_start":12,"column_end":15},"name":"of1","qualname":"<Array>::of1","value":"fn (a: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.of()` method creates a new Array instance with a variable\n number of arguments, regardless of number or type of the arguments.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":14690,"byte_end":14693,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"of2","qualname":"<Array>::of2","value":"fn (a: &JsValue, b: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":14921,"byte_end":14924,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"of3","qualname":"<Array>::of3","value":"fn (a: &JsValue, b: &JsValue, c: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":15165,"byte_end":15168,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"of4","qualname":"<Array>::of4","value":"fn (a: &JsValue, b: &JsValue, c: &JsValue, d: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":15422,"byte_end":15425,"line_start":300,"line_end":300,"column_start":12,"column_end":15},"name":"of5","qualname":"<Array>::of5","value":"fn (a: &JsValue, b: &JsValue, c: &JsValue, d: &JsValue, e: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":15812,"byte_end":15815,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"pop","qualname":"<Array>::pop","value":"fn (&self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The pop() method removes the last element from an array and returns that\n element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":16135,"byte_end":16139,"line_start":314,"line_end":314,"column_start":12,"column_end":16},"name":"push","qualname":"<Array>::push","value":"fn (&self, value: &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The push() method adds one or more elements to the end of an array and\n returns the new length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":16511,"byte_end":16517,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Array>::reduce","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue, initial_value: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The reduce() method applies a function against an accumulator and each element in\n the array (from left to right) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":17031,"byte_end":17043,"line_start":332,"line_end":332,"column_start":12,"column_end":24},"name":"reduce_right","qualname":"<Array>::reduce_right","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue, initial_value: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The reduceRight() method applies a function against an accumulator and each value\n of the array (from right-to-left) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":17519,"byte_end":17526,"line_start":343,"line_end":343,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Array>::reverse","value":"fn (&self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The reverse() method reverses an array in place. The first array\n element becomes the last, and the last array element becomes the first.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":17875,"byte_end":17880,"line_start":350,"line_end":350,"column_start":12,"column_end":17},"name":"shift","qualname":"<Array>::shift","value":"fn (&self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The shift() method removes the first element from an array and returns\n that removed element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":18280,"byte_end":18285,"line_start":358,"line_end":358,"column_start":12,"column_end":17},"name":"slice","qualname":"<Array>::slice","value":"fn (&self, start: u32, end: u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The slice() method returns a shallow copy of a portion of an array into\n a new array object selected from begin to end (end not included).\n The original array will not be modified.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":18710,"byte_end":18714,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"some","qualname":"<Array>::some","value":"fn (&self, predicate: &mut dyn FnMut(JsValue) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The some() method tests whether at least one element in the array passes the test implemented\n by the provided function.\n Note: This method returns false for any condition put on an empty array.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":19281,"byte_end":19285,"line_start":376,"line_end":376,"column_start":12,"column_end":16},"name":"sort","qualname":"<Array>::sort","value":"fn (&self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The sort() method sorts the elements of an array in place and returns\n the array. The sort is not necessarily stable. The default sort\n order is according to string Unicode code points.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":19608,"byte_end":19614,"line_start":383,"line_end":383,"column_start":12,"column_end":18},"name":"splice","qualname":"<Array>::splice","value":"fn (&self, start: u32, delete_count: u32, item: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The splice() method changes the contents of an array by removing existing elements and/or\n adding new elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20160,"byte_end":20176,"line_start":391,"line_end":391,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Array>::to_locale_string","value":"fn (&self, locales: &JsValue, options: &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleString() method returns a string representing the elements of the array.\n The elements are converted to Strings using their toLocaleString methods and these\n Strings are separated by a locale-specific String (such as a comma “,”).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20541,"byte_end":20550,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Array>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the specified array\n and its elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20883,"byte_end":20890,"line_start":405,"line_end":405,"column_start":12,"column_end":19},"name":"unshift","qualname":"<Array>::unshift","value":"fn (&self, value: &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The unshift() method adds one or more elements to the beginning of an\n array and returns the new length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":21071,"byte_end":21082,"line_start":413,"line_end":413,"column_start":14,"column_end":25},"name":"ArrayBuffer","qualname":"::ArrayBuffer","value":"ArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":394}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20962,"byte_end":20963,"line_start":409,"line_end":409,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":21649,"byte_end":21652,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"new","qualname":"<ArrayBuffer>::new","value":"fn (length: u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `ArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer. You cannot directly\n manipulate the contents of an `ArrayBuffer`; instead, you\n create one of the typed array objects or a `DataView` object\n which represents the buffer in a specific format, and use that\n to read and write the contents of the buffer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":22266,"byte_end":22277,"line_start":434,"line_end":434,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<ArrayBuffer>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength property of an object which is an instance of type ArrayBuffer\n it's an accessor property whose set accessor function is undefined,\n meaning that you can only read this property.\n The value is established when the array is constructed and cannot be changed.\n This property returns 0 if this ArrayBuffer has been detached.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":22678,"byte_end":22685,"line_start":441,"line_end":441,"column_start":12,"column_end":19},"name":"is_view","qualname":"<ArrayBuffer>::is_view","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isView()` method returns true if arg is one of the `ArrayBuffer`\n views, such as typed array objects or a DataView; false otherwise.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23062,"byte_end":23067,"line_start":449,"line_end":449,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBuffer>::slice","value":"fn (&self, begin: u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `ArrayBuffer` whose contents\n are a copy of this `ArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23361,"byte_end":23375,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<ArrayBuffer>::slice_with_end","value":"fn (&self, begin: u32, end: u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23566,"byte_end":23583,"line_start":463,"line_end":463,"column_start":14,"column_end":31},"name":"SharedArrayBuffer","qualname":"::SharedArrayBuffer","value":"SharedArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":475}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":24083,"byte_end":24086,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedArrayBuffer>::new","value":"fn (length: u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `SharedArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer, similar to the `ArrayBuffer`\n object, but in a way that they can be used to create views\n on shared memory. Unlike an `ArrayBuffer`, a `SharedArrayBuffer`\n cannot become detached.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":24541,"byte_end":24552,"line_start":481,"line_end":481,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<SharedArrayBuffer>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength accessor property represents the length of\n an `SharedArrayBuffer` in bytes. This is established when\n the `SharedArrayBuffer` is constructed and cannot be changed.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":24955,"byte_end":24960,"line_start":489,"line_end":489,"column_start":12,"column_end":17},"name":"slice","qualname":"<SharedArrayBuffer>::slice","value":"fn (&self, begin: u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `SharedArrayBuffer` whose contents\n are a copy of this `SharedArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":25272,"byte_end":25286,"line_start":495,"line_end":495,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<SharedArrayBuffer>::slice_with_end","value":"fn (&self, begin: u32, end: u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":25697,"byte_end":25701,"line_start":506,"line_end":506,"column_start":12,"column_end":16},"name":"keys","qualname":"<Array>::keys","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The keys() method returns a new Array Iterator object that contains the\n keys for each index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":26037,"byte_end":26044,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"entries","qualname":"<Array>::entries","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The entries() method returns a new Array Iterator object that contains\n the key/value pairs for each index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":26369,"byte_end":26375,"line_start":520,"line_end":520,"column_start":12,"column_end":18},"name":"values","qualname":"<Array>::values","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The values() method returns a new Array Iterator object that\n contains the values for each index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27012,"byte_end":27019,"line_start":533,"line_end":533,"column_start":9,"column_end":16},"name":"Atomics","qualname":"::Atomics","value":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513}],"decl_id":null,"docs":" The `Atomics` object provides atomic operations as static methods.\n They are used with `SharedArrayBuffer` objects.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":26979,"byte_end":27003,"line_start":532,"line_end":532,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":489},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27567,"byte_end":27570,"line_start":545,"line_end":545,"column_start":16,"column_end":19},"name":"add","qualname":"::Atomics::add","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.add()` method adds a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":28169,"byte_end":28172,"line_start":555,"line_end":555,"column_start":16,"column_end":19},"name":"and","qualname":"::Atomics::and","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.and()` method computes a bitwise AND with a given\n value at a given position in the array, and returns the old value\n at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":28925,"byte_end":28941,"line_start":566,"line_end":566,"column_start":16,"column_end":32},"name":"compare_exchange","qualname":"::Atomics::compare_exchange","value":"fn (typed_array: &JsValue, index: u32, expected_value: i32, replacement_value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.compareExchange()` method exchanges a given\n replacement value at a given position in the array, if a given expected\n value equals the old value. It returns the old value at that position\n whether it was equal to the expected value or not.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":29608,"byte_end":29616,"line_start":580,"line_end":580,"column_start":16,"column_end":24},"name":"exchange","qualname":"::Atomics::exchange","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.exchange()` method stores a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":497},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":30182,"byte_end":30194,"line_start":589,"line_end":589,"column_start":16,"column_end":28},"name":"is_lock_free","qualname":"::Atomics::is_lock_free","value":"fn (size: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.isLockFree()` method is used to determine\n whether to use locks or atomic operations. It returns true,\n if the given size is one of the `BYTES_PER_ELEMENT` property\n of integer `TypedArray` types.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":30534,"byte_end":30538,"line_start":596,"line_end":596,"column_start":16,"column_end":20},"name":"load","qualname":"::Atomics::load","value":"fn (typed_array: &JsValue, index: u32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.load()` method returns a value at a given\n position in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":31005,"byte_end":31011,"line_start":604,"line_end":604,"column_start":16,"column_end":22},"name":"notify","qualname":"::Atomics::notify","value":"fn (typed_array: &Int32Array, index: u32, count: u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.notify()` method notifies up some agents that\n are sleeping in the wait queue.\n Note: This operation works with a shared `Int32Array` only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":31598,"byte_end":31600,"line_start":613,"line_end":613,"column_start":16,"column_end":18},"name":"or","qualname":"::Atomics::or","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.or()` method computes a bitwise OR with a given value\n at a given position in the array, and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":32024,"byte_end":32029,"line_start":620,"line_end":620,"column_start":16,"column_end":21},"name":"store","qualname":"::Atomics::store","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.store()` method stores a given value at the given\n position in the array and returns that value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":32598,"byte_end":32601,"line_start":629,"line_end":629,"column_start":16,"column_end":19},"name":"sub","qualname":"::Atomics::sub","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.sub()` method substracts a given value at a\n given position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":509},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":33293,"byte_end":33297,"line_start":640,"line_end":640,"column_start":16,"column_end":20},"name":"wait","qualname":"::Atomics::wait","value":"fn (typed_array: &Int32Array, index: u32, value: i32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.wait()` method verifies that a given\n position in an `Int32Array` still contains a given value\n and if so sleeps, awaiting a wakeup or a timeout.\n It returns a string which is either \"ok\", \"not-equal\", or \"timed-out\".\n Note: This operation only works with a shared `Int32Array`\n and may not be allowed on the main thread.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":511},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":33648,"byte_end":33665,"line_start":646,"line_end":646,"column_start":16,"column_end":33},"name":"wait_with_timeout","qualname":"::Atomics::wait_with_timeout","value":"fn (typed_array: &Int32Array, index: u32, value: i32, timeout: f64) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Like `wait()`, but with timeout","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34345,"byte_end":34348,"line_start":661,"line_end":661,"column_start":16,"column_end":19},"name":"xor","qualname":"::Atomics::xor","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.xor()` method computes a bitwise XOR\n with a given value at a given position in the array,\n and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":581},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34597,"byte_end":34604,"line_start":670,"line_end":670,"column_start":14,"column_end":21},"name":"Boolean","qualname":"::Boolean","value":"Boolean {  }","parent":null,"children":[{"krate":0,"index":582}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34441,"byte_end":34456,"line_start":666,"line_end":666,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34441,"byte_end":34456,"line_start":666,"line_end":666,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34441,"byte_end":34456,"line_start":666,"line_end":666,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34455,"byte_end":34456,"line_start":666,"line_end":666,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34931,"byte_end":34934,"line_start":677,"line_end":677,"column_start":12,"column_end":15},"name":"new","qualname":"<Boolean>::new","value":"fn (value: &JsValue) -> Boolean","parent":null,"children":[],"decl_id":null,"docs":" The `Boolean()` constructor creates an object wrapper for a boolean value.","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `Boolean::from` instead\")","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34853,"byte_end":34919,"line_start":676,"line_end":676,"column_start":5,"column_end":71}},{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34441,"byte_end":34456,"line_start":666,"line_end":666,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34441,"byte_end":34456,"line_start":666,"line_end":666,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35239,"byte_end":35247,"line_start":683,"line_end":683,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Boolean>::value_of","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `Boolean` object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34441,"byte_end":34456,"line_start":666,"line_end":666,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":34441,"byte_end":34456,"line_start":666,"line_end":666,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":744},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35921,"byte_end":35929,"line_start":718,"line_end":718,"column_start":14,"column_end":22},"name":"DataView","qualname":"::DataView","value":"DataView {  }","parent":null,"children":[{"krate":0,"index":745}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35812,"byte_end":35813,"line_start":714,"line_end":714,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":36287,"byte_end":36290,"line_start":726,"line_end":726,"column_start":12,"column_end":15},"name":"new","qualname":"<DataView>::new","value":"fn (buffer: &ArrayBuffer, byteOffset: usize, byteLength: usize) -> DataView","parent":null,"children":[],"decl_id":null,"docs":" The `DataView` view provides a low-level interface for reading and\n writing multiple number types in an `ArrayBuffer` irrespective of the\n platform's endianness.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":36654,"byte_end":36660,"line_start":732,"line_end":732,"column_start":12,"column_end":18},"name":"buffer","qualname":"<DataView>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The ArrayBuffer referenced by this view. Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":37047,"byte_end":37058,"line_start":739,"line_end":739,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<DataView>::byte_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":37439,"byte_end":37450,"line_start":746,"line_end":746,"column_start":12,"column_end":23},"name":"byte_offset","qualname":"<DataView>::byte_offset","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The offset (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":37805,"byte_end":37813,"line_start":753,"line_end":753,"column_start":12,"column_end":20},"name":"get_int8","qualname":"<DataView>::get_int8","value":"fn (&self, byte_offset: usize) -> i8","parent":null,"children":[],"decl_id":null,"docs":" The getInt8() method gets a signed 8-bit integer (byte) at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":38190,"byte_end":38199,"line_start":760,"line_end":760,"column_start":12,"column_end":21},"name":"get_uint8","qualname":"<DataView>::get_uint8","value":"fn (&self, byte_offset: usize) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The getUint8() method gets a unsigned 8-bit integer (byte) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":38576,"byte_end":38585,"line_start":767,"line_end":767,"column_start":12,"column_end":21},"name":"get_int16","qualname":"<DataView>::get_int16","value":"fn (&self, byte_offset: usize) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The getInt16() method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":38963,"byte_end":38979,"line_start":774,"line_end":774,"column_start":12,"column_end":28},"name":"get_int16_endian","qualname":"<DataView>::get_int16_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The getInt16() method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":39389,"byte_end":39399,"line_start":781,"line_end":781,"column_start":12,"column_end":22},"name":"get_uint16","qualname":"<DataView>::get_uint16","value":"fn (&self, byte_offset: usize) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The getUint16() method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":39788,"byte_end":39805,"line_start":788,"line_end":788,"column_start":12,"column_end":29},"name":"get_uint16_endian","qualname":"<DataView>::get_uint16_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The getUint16() method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":40203,"byte_end":40212,"line_start":795,"line_end":795,"column_start":12,"column_end":21},"name":"get_int32","qualname":"<DataView>::get_int32","value":"fn (&self, byte_offset: usize) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getInt32() method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":40589,"byte_end":40605,"line_start":802,"line_end":802,"column_start":12,"column_end":28},"name":"get_int32_endian","qualname":"<DataView>::get_int32_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getInt32() method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":41014,"byte_end":41024,"line_start":809,"line_end":809,"column_start":12,"column_end":22},"name":"get_uint32","qualname":"<DataView>::get_uint32","value":"fn (&self, byte_offset: usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUint32() method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":41412,"byte_end":41429,"line_start":816,"line_end":816,"column_start":12,"column_end":29},"name":"get_uint32_endian","qualname":"<DataView>::get_uint32_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUint32() method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":41832,"byte_end":41843,"line_start":823,"line_end":823,"column_start":12,"column_end":23},"name":"get_float32","qualname":"<DataView>::get_float32","value":"fn (&self, byte_offset: usize) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The getFloat32() method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":42225,"byte_end":42243,"line_start":830,"line_end":830,"column_start":12,"column_end":30},"name":"get_float32_endian","qualname":"<DataView>::get_float32_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The getFloat32() method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":42647,"byte_end":42658,"line_start":837,"line_end":837,"column_start":12,"column_end":23},"name":"get_float64","qualname":"<DataView>::get_float64","value":"fn (&self, byte_offset: usize) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The getFloat64() method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":43041,"byte_end":43059,"line_start":844,"line_end":844,"column_start":12,"column_end":30},"name":"get_float64_endian","qualname":"<DataView>::get_float64_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The getFloat64() method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":43461,"byte_end":43469,"line_start":851,"line_end":851,"column_start":12,"column_end":20},"name":"set_int8","qualname":"<DataView>::set_int8","value":"fn (&self, byte_offset: usize, value: i8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt8() method stores a signed 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":43860,"byte_end":43869,"line_start":858,"line_end":858,"column_start":12,"column_end":21},"name":"set_uint8","qualname":"<DataView>::set_uint8","value":"fn (&self, byte_offset: usize, value: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint8() method stores an unsigned 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":44259,"byte_end":44268,"line_start":865,"line_end":865,"column_start":12,"column_end":21},"name":"set_int16","qualname":"<DataView>::set_int16","value":"fn (&self, byte_offset: usize, value: i16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt16() method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":44659,"byte_end":44675,"line_start":872,"line_end":872,"column_start":12,"column_end":28},"name":"set_int16_endian","qualname":"<DataView>::set_int16_endian","value":"fn (&self, byte_offset: usize, value: i16, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt16() method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":45102,"byte_end":45112,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"set_uint16","qualname":"<DataView>::set_uint16","value":"fn (&self, byte_offset: usize, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint16() method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":45518,"byte_end":45535,"line_start":886,"line_end":886,"column_start":12,"column_end":29},"name":"set_uint16_endian","qualname":"<DataView>::set_uint16_endian","value":"fn (&self, byte_offset: usize, value: u16, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint16() method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":45946,"byte_end":45955,"line_start":893,"line_end":893,"column_start":12,"column_end":21},"name":"set_int32","qualname":"<DataView>::set_int32","value":"fn (&self, byte_offset: usize, value: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt32() method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":46345,"byte_end":46361,"line_start":900,"line_end":900,"column_start":12,"column_end":28},"name":"set_int32_endian","qualname":"<DataView>::set_int32_endian","value":"fn (&self, byte_offset: usize, value: i32, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt32() method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":46787,"byte_end":46797,"line_start":907,"line_end":907,"column_start":12,"column_end":22},"name":"set_uint32","qualname":"<DataView>::set_uint32","value":"fn (&self, byte_offset: usize, value: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint32() method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":47202,"byte_end":47219,"line_start":914,"line_end":914,"column_start":12,"column_end":29},"name":"set_uint32_endian","qualname":"<DataView>::set_uint32_endian","value":"fn (&self, byte_offset: usize, value: u32, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint32() method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":47635,"byte_end":47646,"line_start":921,"line_end":921,"column_start":12,"column_end":23},"name":"set_float32","qualname":"<DataView>::set_float32","value":"fn (&self, byte_offset: usize, value: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setFloat32() method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48041,"byte_end":48059,"line_start":928,"line_end":928,"column_start":12,"column_end":30},"name":"set_float32_endian","qualname":"<DataView>::set_float32_endian","value":"fn (&self, byte_offset: usize, value: f32, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setFloat32() method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48476,"byte_end":48487,"line_start":935,"line_end":935,"column_start":12,"column_end":23},"name":"set_float64","qualname":"<DataView>::set_float64","value":"fn (&self, byte_offset: usize, value: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setFloat64() method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48883,"byte_end":48901,"line_start":942,"line_end":942,"column_start":12,"column_end":30},"name":"set_float64_endian","qualname":"<DataView>::set_float64_endian","value":"fn (&self, byte_offset: usize, value: f64, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setFloat64() method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35798,"byte_end":35813,"line_start":714,"line_end":714,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":831},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":49108,"byte_end":49113,"line_start":950,"line_end":950,"column_start":14,"column_end":19},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":832}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48999,"byte_end":49000,"line_start":946,"line_end":946,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":49553,"byte_end":49556,"line_start":959,"line_end":959,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn (message: &str) -> Error","parent":null,"children":[],"decl_id":null,"docs":" The Error constructor creates an error object.\n Instances of Error objects are thrown when runtime errors occur.\n The Error object can also be used as a base object for user-defined exceptions.\n See below for standard built-in error types.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":49849,"byte_end":49856,"line_start":965,"line_end":965,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The message property is a human-readable description of the error.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":49943,"byte_end":49954,"line_start":967,"line_end":967,"column_start":12,"column_end":23},"name":"set_message","qualname":"<Error>::set_message","value":"fn (&self, message: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50271,"byte_end":50275,"line_start":973,"line_end":973,"column_start":12,"column_end":16},"name":"name","qualname":"<Error>::name","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The name property represents a name for the type of error. The initial value is \"Error\".","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50362,"byte_end":50370,"line_start":975,"line_end":975,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Error>::set_name","value":"fn (&self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50678,"byte_end":50687,"line_start":981,"line_end":981,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Error>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the specified Error object","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":48985,"byte_end":49000,"line_start":946,"line_end":946,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50871,"byte_end":50880,"line_start":989,"line_end":989,"column_start":14,"column_end":23},"name":"EvalError","qualname":"::EvalError","value":"EvalError {  }","parent":null,"children":[{"krate":0,"index":910}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50731,"byte_end":50746,"line_start":985,"line_end":985,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50731,"byte_end":50746,"line_start":985,"line_end":985,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50731,"byte_end":50746,"line_start":985,"line_end":985,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50745,"byte_end":50746,"line_start":985,"line_end":985,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51265,"byte_end":51268,"line_start":997,"line_end":997,"column_start":12,"column_end":15},"name":"new","qualname":"<EvalError>::new","value":"fn (message: &str) -> EvalError","parent":null,"children":[],"decl_id":null,"docs":" The EvalError object indicates an error regarding the global eval() function. This\n exception is not thrown by JavaScript anymore, however the EvalError object remains for\n compatibility.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50731,"byte_end":50746,"line_start":985,"line_end":985,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":50731,"byte_end":50746,"line_start":985,"line_end":985,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51471,"byte_end":51479,"line_start":1005,"line_end":1005,"column_start":14,"column_end":22},"name":"Function","qualname":"::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":1025}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51327,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":52112,"byte_end":52125,"line_start":1016,"line_end":1016,"column_start":12,"column_end":25},"name":"new_with_args","qualname":"<Function>::new_with_args","value":"fn (args: &str, body: &str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":52794,"byte_end":52805,"line_start":1027,"line_end":1027,"column_start":12,"column_end":23},"name":"new_no_args","qualname":"<Function>::new_no_args","value":"fn (body: &str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":53150,"byte_end":53155,"line_start":1034,"line_end":1034,"column_start":12,"column_end":17},"name":"apply","qualname":"<Function>::apply","value":"fn (&self, context: &JsValue, args: &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The apply() method calls a function with a given this value, and arguments provided as an array\n (or an array-like object).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":53544,"byte_end":53549,"line_start":1041,"line_end":1041,"column_start":12,"column_end":17},"name":"call0","qualname":"<Function>::call0","value":"fn (&self, context: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":53924,"byte_end":53929,"line_start":1048,"line_end":1048,"column_start":12,"column_end":17},"name":"call1","qualname":"<Function>::call1","value":"fn (&self, context: &JsValue, arg1: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":54320,"byte_end":54325,"line_start":1055,"line_end":1055,"column_start":12,"column_end":17},"name":"call2","qualname":"<Function>::call2","value":"fn (&self, context: &JsValue, arg1: &JsValue, arg2: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":54771,"byte_end":54776,"line_start":1067,"line_end":1067,"column_start":12,"column_end":17},"name":"call3","qualname":"<Function>::call3","value":"fn (&self, context: &JsValue, arg1: &JsValue, arg2: &JsValue, arg3: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":55340,"byte_end":55344,"line_start":1080,"line_end":1080,"column_start":12,"column_end":16},"name":"bind","qualname":"<Function>::bind","value":"fn (&self, context: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":55797,"byte_end":55802,"line_start":1087,"line_end":1087,"column_start":12,"column_end":17},"name":"bind0","qualname":"<Function>::bind0","value":"fn (&self, context: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":56255,"byte_end":56260,"line_start":1094,"line_end":1094,"column_start":12,"column_end":17},"name":"bind1","qualname":"<Function>::bind1","value":"fn (&self, context: &JsValue, arg1: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":56729,"byte_end":56734,"line_start":1101,"line_end":1101,"column_start":12,"column_end":17},"name":"bind2","qualname":"<Function>::bind2","value":"fn (&self, context: &JsValue, arg1: &JsValue, arg2: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":57219,"byte_end":57224,"line_start":1108,"line_end":1108,"column_start":12,"column_end":17},"name":"bind3","qualname":"<Function>::bind3","value":"fn (&self, context: &JsValue, arg1: &JsValue, arg2: &JsValue, arg3: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":57651,"byte_end":57657,"line_start":1120,"line_end":1120,"column_start":12,"column_end":18},"name":"length","qualname":"<Function>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property indicates the number of arguments expected by the function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58056,"byte_end":58060,"line_start":1128,"line_end":1128,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" A Function object's read-only name property indicates the function's\n name as specified when it was created or \"anonymous\" for functions\n created anonymously.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58380,"byte_end":58389,"line_start":1134,"line_end":1134,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Function>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the source code of the function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":51313,"byte_end":51328,"line_start":1001,"line_end":1001,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58734,"byte_end":58742,"line_start":1144,"line_end":1144,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Function>::try_from","value":"fn (val: &JsValue) -> Option<&Function>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Function` value of this JS value if it's an instance of a\n function.","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58640,"byte_end":58722,"line_start":1143,"line_end":1143,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58948,"byte_end":58957,"line_start":1154,"line_end":1154,"column_start":14,"column_end":23},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":1103}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58825,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58825,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58825,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58839,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":59325,"byte_end":59329,"line_start":1161,"line_end":1161,"column_start":12,"column_end":16},"name":"next","qualname":"<Generator>::next","value":"fn (&self, value: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The next() method returns an object with two properties done and value.\n You can also provide a parameter to the next method to send a value to the generator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58825,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58825,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":59679,"byte_end":59686,"line_start":1167,"line_end":1167,"column_start":12,"column_end":19},"name":"return_","qualname":"<Generator>::return_","value":"fn (&self, value: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The return() method returns the given value and finishes the generator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58825,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58825,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60086,"byte_end":60091,"line_start":1174,"line_end":1174,"column_start":12,"column_end":17},"name":"throw","qualname":"<Generator>::throw","value":"fn (&self, error: &Error) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The throw() method resumes the execution of a generator by throwing an error into it\n and returns an object with two properties done and value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58825,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58825,"byte_end":58840,"line_start":1150,"line_end":1150,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60287,"byte_end":60290,"line_start":1182,"line_end":1182,"column_start":14,"column_end":17},"name":"Map","qualname":"::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1196}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60178,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60527,"byte_end":60532,"line_start":1188,"line_end":1188,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map>::clear","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The clear() method removes all elements from a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60792,"byte_end":60798,"line_start":1194,"line_end":1194,"column_start":12,"column_end":18},"name":"delete","qualname":"<Map>::delete","value":"fn (&self, key: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The delete() method removes the specified element from a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":61158,"byte_end":61166,"line_start":1201,"line_end":1201,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Map>::for_each","value":"fn (&self, callback: &mut dyn FnMut(JsValue, JsValue)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The forEach() method executes a provided function once per each\n key/value pair in the Map object, in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":61462,"byte_end":61465,"line_start":1207,"line_end":1207,"column_start":12,"column_end":15},"name":"get","qualname":"<Map>::get","value":"fn (&self, key: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The get() method returns a specified element from a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":61790,"byte_end":61793,"line_start":1214,"line_end":1214,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"fn (&self, key: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The has() method returns a boolean indicating whether an element with\n the specified key exists or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":62136,"byte_end":62139,"line_start":1221,"line_end":1221,"column_start":12,"column_end":15},"name":"new","qualname":"<Map>::new","value":"fn () -> Map","parent":null,"children":[],"decl_id":null,"docs":" The Map object holds key-value pairs. Any value (both objects and\n primitive values) maybe used as either a key or a value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":62424,"byte_end":62427,"line_start":1228,"line_end":1228,"column_start":12,"column_end":15},"name":"set","qualname":"<Map>::set","value":"fn (&self, key: &JsValue, value: &JsValue) -> Map","parent":null,"children":[],"decl_id":null,"docs":" The set() method adds or updates an element with a specified key\n and value to a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":62854,"byte_end":62858,"line_start":1236,"line_end":1236,"column_start":12,"column_end":16},"name":"size","qualname":"<Map>::size","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The value of size is an integer representing how many entries\n the Map object has. A set accessor function for size is undefined;\n you can not change this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":60164,"byte_end":60179,"line_start":1178,"line_end":1178,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":63263,"byte_end":63270,"line_start":1248,"line_end":1248,"column_start":12,"column_end":19},"name":"entries","qualname":"<Map>::entries","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The entries() method returns a new Iterator object that contains\n the [key, value] pairs for each element in the Map object in\n insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":62898,"byte_end":62913,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":62898,"byte_end":62913,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":63605,"byte_end":63609,"line_start":1255,"line_end":1255,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The keys() method returns a new Iterator object that contains the\n keys for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":62898,"byte_end":62913,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":62898,"byte_end":62913,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":63950,"byte_end":63956,"line_start":1262,"line_end":1262,"column_start":12,"column_end":18},"name":"values","qualname":"<Map>::values","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The values() method returns a new Iterator object that contains the\n values for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":62898,"byte_end":62913,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":62898,"byte_end":62913,"line_start":1240,"line_end":1240,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":64389,"byte_end":64397,"line_start":1274,"line_end":1274,"column_start":14,"column_end":22},"name":"Iterator","qualname":"::Iterator","value":"Iterator {  }","parent":null,"children":[{"krate":0,"index":1272}],"decl_id":null,"docs":" Any object that conforms to the JS iterator protocol. For example,\n something returned by `myArray[Symbol.iterator]()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":63997,"byte_end":64012,"line_start":1266,"line_end":1266,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":63997,"byte_end":64012,"line_start":1266,"line_end":1266,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":63997,"byte_end":64012,"line_start":1266,"line_end":1266,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":64733,"byte_end":64737,"line_start":1281,"line_end":1281,"column_start":12,"column_end":16},"name":"next","qualname":"<Iterator>::next","value":"fn (&self) -> Result<IteratorNext, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The next method always has to return an object with appropriate\n properties including done and value. If a non-object value gets returned\n (such as false or undefined), a TypeError (\"iterator.next() returned a\n non-object value\") will be thrown.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":63997,"byte_end":64012,"line_start":1266,"line_end":1266,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":63997,"byte_end":64012,"line_start":1266,"line_end":1266,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":65369,"byte_end":65373,"line_start":1307,"line_end":1307,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":65587,"byte_end":65595,"line_start":1315,"line_end":1315,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67160,"byte_end":67168,"line_start":1391,"line_end":1391,"column_start":8,"column_end":16},"name":"try_iter","qualname":"::try_iter","value":"fn (val: &JsValue) -> Result<Option<IntoIter>, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over `val` using the JS iteration protocol and\n `Symbol.iterator`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67928,"byte_end":67940,"line_start":1416,"line_end":1416,"column_start":14,"column_end":26},"name":"IteratorNext","qualname":"::IteratorNext","value":"IteratorNext {  }","parent":null,"children":[{"krate":0,"index":1399}],"decl_id":null,"docs":" The result of calling `next()` on a JS iterator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67625,"byte_end":67640,"line_start":1409,"line_end":1409,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67625,"byte_end":67640,"line_start":1409,"line_end":1409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67625,"byte_end":67640,"line_start":1409,"line_end":1409,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67639,"byte_end":67640,"line_start":1409,"line_end":1409,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68368,"byte_end":68372,"line_start":1426,"line_end":1426,"column_start":12,"column_end":16},"name":"done","qualname":"<IteratorNext>::done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the value `true` if the iterator is past the end of the iterated\n sequence. In this case value optionally specifies the return value of\n the iterator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67625,"byte_end":67640,"line_start":1409,"line_end":1409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67625,"byte_end":67640,"line_start":1409,"line_end":1409,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68560,"byte_end":68565,"line_start":1431,"line_end":1431,"column_start":12,"column_end":17},"name":"value","qualname":"<IteratorNext>::value","value":"fn (&self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" Any JavaScript value returned by the iterator. Can be omitted when done\n is true.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67625,"byte_end":67640,"line_start":1409,"line_end":1409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":67625,"byte_end":67640,"line_start":1409,"line_end":1409,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68635,"byte_end":68639,"line_start":1435,"line_end":1435,"column_start":9,"column_end":13},"name":"Math","qualname":"::Math","value":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1439},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1477}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68602,"byte_end":68626,"line_start":1434,"line_end":1434,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":69019,"byte_end":69022,"line_start":1446,"line_end":1446,"column_start":16,"column_end":19},"name":"abs","qualname":"::Math::abs","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.abs() function returns the absolute value of a number, that is\n Math.abs(x) = |x|","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":69435,"byte_end":69439,"line_start":1454,"line_end":1454,"column_start":16,"column_end":20},"name":"acos","qualname":"::Math::acos","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.acos() function returns the arccosine (in radians) of a\n number, that is ∀x∊[-1;1]\n Math.acos(x) = arccos(x) = the unique y∊[0;π] such that cos(y)=x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":69851,"byte_end":69856,"line_start":1462,"line_end":1462,"column_start":16,"column_end":21},"name":"acosh","qualname":"::Math::acosh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.acosh() function returns the hyperbolic arc-cosine of a\n number, that is ∀x ≥ 1\n Math.acosh(x) = arcosh(x) = the unique y ≥ 0 such that cosh(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":70275,"byte_end":70279,"line_start":1470,"line_end":1470,"column_start":16,"column_end":20},"name":"asin","qualname":"::Math::asin","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.asin() function returns the arcsine (in radians) of a\n number, that is ∀x ∊ [-1;1]\n Math.asin(x) = arcsin(x) = the unique y∊[-π2;π2] such that sin(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":70659,"byte_end":70664,"line_start":1477,"line_end":1477,"column_start":16,"column_end":21},"name":"asinh","qualname":"::Math::asinh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.asinh() function returns the hyperbolic arcsine of a\n number, that is Math.asinh(x) = arsinh(x) = the unique y such that sinh(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":70935,"byte_end":70939,"line_start":1483,"line_end":1483,"column_start":16,"column_end":20},"name":"atan","qualname":"::Math::atan","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.atan() function returns the arctangent (in radians) of a\n number, that is Math.atan(x) = arctan(x) = the unique y ∊ [-π2;π2]such that\n tan(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":71261,"byte_end":71266,"line_start":1490,"line_end":1490,"column_start":16,"column_end":21},"name":"atan2","qualname":"::Math::atan2","value":"fn (y: f64, x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.atan2() function returns the arctangent of the quotient of\n its arguments.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":71687,"byte_end":71692,"line_start":1498,"line_end":1498,"column_start":16,"column_end":21},"name":"atanh","qualname":"::Math::atanh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.atanh() function returns the hyperbolic arctangent of a number,\n that is ∀x ∊ (-1,1), Math.atanh(x) = arctanh(x) = the unique y such that\n tanh(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":72050,"byte_end":72054,"line_start":1505,"line_end":1505,"column_start":16,"column_end":20},"name":"cbrt","qualname":"::Math::cbrt","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.cbrt() function returns the cube root of a number, that is\n Math.cbrt(x) = x^3 = the unique y such that y^3 = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":72387,"byte_end":72391,"line_start":1512,"line_end":1512,"column_start":16,"column_end":20},"name":"ceil","qualname":"::Math::ceil","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.ceil() function returns the smallest integer greater than\n or equal to a given number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":72745,"byte_end":72750,"line_start":1519,"line_end":1519,"column_start":16,"column_end":21},"name":"clz32","qualname":"::Math::clz32","value":"fn (x: i32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The Math.clz32() function returns the number of leading zero bits in\n the 32-bit binary representation of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":73148,"byte_end":73151,"line_start":1526,"line_end":1526,"column_start":16,"column_end":19},"name":"cos","qualname":"::Math::cos","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.cos() static function returns the cosine of the specified angle,\n which must be specified in radians. This value is length(adjacent)/length(hypotenuse).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":73501,"byte_end":73505,"line_start":1533,"line_end":1533,"column_start":16,"column_end":20},"name":"cosh","qualname":"::Math::cosh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.cosh() function returns the hyperbolic cosine of a number,\n that can be expressed using the constant e.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":73899,"byte_end":73902,"line_start":1540,"line_end":1540,"column_start":16,"column_end":19},"name":"exp","qualname":"::Math::exp","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.exp() function returns e^x, where x is the argument, and e is Euler's number\n (also known as Napier's constant), the base of the natural logarithms.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":74251,"byte_end":74256,"line_start":1547,"line_end":1547,"column_start":16,"column_end":21},"name":"expm1","qualname":"::Math::expm1","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.expm1() function returns e^x - 1, where x is the argument, and e the base of the\n natural logarithms.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":74587,"byte_end":74592,"line_start":1554,"line_end":1554,"column_start":16,"column_end":21},"name":"floor","qualname":"::Math::floor","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.floor() function returns the largest integer less than or\n equal to a given number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":74937,"byte_end":74943,"line_start":1561,"line_end":1561,"column_start":16,"column_end":22},"name":"fround","qualname":"::Math::fround","value":"fn (x: f64) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The Math.fround() function returns the nearest 32-bit single precision float representation\n of a Number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":75260,"byte_end":75265,"line_start":1567,"line_end":1567,"column_start":16,"column_end":21},"name":"hypot","qualname":"::Math::hypot","value":"fn (x: f64, y: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.hypot() function returns the square root of the sum of squares of its arguments.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":75614,"byte_end":75618,"line_start":1574,"line_end":1574,"column_start":16,"column_end":20},"name":"imul","qualname":"::Math::imul","value":"fn (x: i32, y: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The Math.imul() function returns the result of the C-like 32-bit multiplication of the\n two parameters.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":76013,"byte_end":76016,"line_start":1581,"line_end":1581,"column_start":16,"column_end":19},"name":"log","qualname":"::Math::log","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.log() function returns the natural logarithm (base e) of a number.\n The JavaScript Math.log() function is equivalent to ln(x) in mathematics.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":76312,"byte_end":76317,"line_start":1587,"line_end":1587,"column_start":16,"column_end":21},"name":"log10","qualname":"::Math::log10","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.log10() function returns the base 10 logarithm of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":76614,"byte_end":76619,"line_start":1592,"line_end":1592,"column_start":16,"column_end":21},"name":"log1p","qualname":"::Math::log1p","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.log1p() function returns the natural logarithm (base e) of 1 + a number.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":76912,"byte_end":76916,"line_start":1598,"line_end":1598,"column_start":16,"column_end":20},"name":"log2","qualname":"::Math::log2","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.log2() function returns the base 2 logarithm of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":77201,"byte_end":77204,"line_start":1604,"line_end":1604,"column_start":16,"column_end":19},"name":"max","qualname":"::Math::max","value":"fn (x: f64, y: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.max() function returns the largest of two numbers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":77517,"byte_end":77520,"line_start":1610,"line_end":1610,"column_start":16,"column_end":19},"name":"min","qualname":"::Math::min","value":"fn (x: f64, y: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The static function Math.min() returns the lowest-valued number passed into it.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":77841,"byte_end":77844,"line_start":1616,"line_end":1616,"column_start":16,"column_end":19},"name":"pow","qualname":"::Math::pow","value":"fn (base: f64, exponent: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.pow() function returns the base to the exponent power, that is, base^exponent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":78496,"byte_end":78502,"line_start":1626,"line_end":1626,"column_start":16,"column_end":22},"name":"random","qualname":"::Math::random","value":"fn () -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.random() function returns a floating-point, pseudo-random number\n in the range 0–1 (inclusive of 0, but not 1) with approximately uniform distribution\n over that range — which you can then scale to your desired range.\n The implementation selects the initial seed to the random number generation algorithm;\n it cannot be chosen or reset by the user.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":78811,"byte_end":78816,"line_start":1632,"line_end":1632,"column_start":16,"column_end":21},"name":"round","qualname":"::Math::round","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.round() function returns the value of a number rounded to the nearest integer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":79170,"byte_end":79174,"line_start":1639,"line_end":1639,"column_start":16,"column_end":20},"name":"sign","qualname":"::Math::sign","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.sign() function returns the sign of a number, indicating whether the number is\n positive, negative or zero.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":79453,"byte_end":79456,"line_start":1645,"line_end":1645,"column_start":16,"column_end":19},"name":"sin","qualname":"::Math::sin","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.sin() function returns the sine of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":79834,"byte_end":79838,"line_start":1652,"line_end":1652,"column_start":16,"column_end":20},"name":"sinh","qualname":"::Math::sinh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.sinh() function returns the hyperbolic sine of a number, that can be expressed\n using the constant e: Math.sinh(x) = (e^x - e^-x)/2","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":80217,"byte_end":80221,"line_start":1659,"line_end":1659,"column_start":16,"column_end":20},"name":"sqrt","qualname":"::Math::sqrt","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.sqrt() function returns the square root of a number, that is\n ∀x ≥ 0, Math.sqrt(x) = √x = the unique y ≥ 0 such that y^2 = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1473},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":80503,"byte_end":80506,"line_start":1665,"line_end":1665,"column_start":16,"column_end":19},"name":"tan","qualname":"::Math::tan","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.tan() function returns the tangent of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":80898,"byte_end":80902,"line_start":1672,"line_end":1672,"column_start":16,"column_end":20},"name":"tanh","qualname":"::Math::tanh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.tanh() function returns the hyperbolic tangent of a number, that is\n tanh x = sinh x / cosh x = (e^x - e^-x)/(e^x + e^-x) = (e^2x - 1)/(e^2x + 1)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81239,"byte_end":81244,"line_start":1679,"line_end":1679,"column_start":16,"column_end":21},"name":"trunc","qualname":"::Math::trunc","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.trunc() function returns the integer part of a number by removing any fractional\n digits.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":68677,"byte_end":68692,"line_start":1439,"line_end":1439,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81421,"byte_end":81427,"line_start":1688,"line_end":1688,"column_start":14,"column_end":20},"name":"Number","qualname":"::Number","value":"Number {  }","parent":null,"children":[{"krate":0,"index":1579}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81735,"byte_end":81744,"line_start":1694,"line_end":1694,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Number>::is_finite","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Number.isFinite() method determines whether the passed value is a finite number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":82075,"byte_end":82085,"line_start":1700,"line_end":1700,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Number>::is_integer","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Number.isInteger() method determines whether the passed value is an integer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":82489,"byte_end":82495,"line_start":1707,"line_end":1707,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<Number>::is_nan","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Number.isNaN() method determines whether the passed value is NaN and its type is Number.\n It is a more robust version of the original, global isNaN().","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":82869,"byte_end":82884,"line_start":1714,"line_end":1714,"column_start":12,"column_end":27},"name":"is_safe_integer","qualname":"<Number>::is_safe_integer","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Number.isSafeInteger() method determines whether the provided value is a number\n that is a safe integer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":83333,"byte_end":83336,"line_start":1723,"line_end":1723,"column_start":12,"column_end":15},"name":"new","qualname":"<Number>::new","value":"fn (value: &JsValue) -> Number","parent":null,"children":[],"decl_id":null,"docs":" The `Number` JavaScript object is a wrapper object allowing\n you to work with numerical values. A `Number` object is\n created using the `Number()` constructor.","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `Number::from` instead\")","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":83256,"byte_end":83321,"line_start":1722,"line_end":1722,"column_start":5,"column_end":70}},{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":83703,"byte_end":83712,"line_start":1730,"line_end":1730,"column_start":12,"column_end":21},"name":"parse_int","qualname":"<Number>::parse_int","value":"fn (text: &str, radix: u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Number.parseInt() method parses a string argument and returns an\n integer of the specified radix or base.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":84070,"byte_end":84081,"line_start":1737,"line_end":1737,"column_start":12,"column_end":23},"name":"parse_float","qualname":"<Number>::parse_float","value":"fn (text: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Number.parseFloat() method parses a string argument and returns a\n floating point number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":84426,"byte_end":84442,"line_start":1744,"line_end":1744,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Number>::to_locale_string","value":"fn (&self, locale: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleString() method returns a string with a language sensitive\n representation of this number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":84809,"byte_end":84821,"line_start":1751,"line_end":1751,"column_start":12,"column_end":24},"name":"to_precision","qualname":"<Number>::to_precision","value":"fn (&self, precision: u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The toPrecision() method returns a string representing the Number\n object to the specified precision.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":85194,"byte_end":85202,"line_start":1758,"line_end":1758,"column_start":12,"column_end":20},"name":"to_fixed","qualname":"<Number>::to_fixed","value":"fn (&self, digits: u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The toFixed() method returns a string representing the Number\n object using fixed-point notation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":85587,"byte_end":85601,"line_start":1765,"line_end":1765,"column_start":12,"column_end":26},"name":"to_exponential","qualname":"<Number>::to_exponential","value":"fn (&self, fraction_digits: u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The toExponential() method returns a string representing the Number\n object in exponential notation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":85966,"byte_end":85975,"line_start":1772,"line_end":1772,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Number>::to_string","value":"fn (&self, radix: u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the\n specified Number object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":86317,"byte_end":86325,"line_start":1779,"line_end":1779,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Number>::value_of","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The valueOf() method returns the wrapped primitive value of\n a Number object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":81281,"byte_end":81296,"line_start":1684,"line_end":1684,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87192,"byte_end":87196,"line_start":1819,"line_end":1819,"column_start":14,"column_end":18},"name":"Date","qualname":"::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1817}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87083,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87502,"byte_end":87510,"line_start":1826,"line_end":1826,"column_start":12,"column_end":20},"name":"get_date","qualname":"<Date>::get_date","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getDate() method returns the day of the month for the\n specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87899,"byte_end":87906,"line_start":1833,"line_end":1833,"column_start":12,"column_end":19},"name":"get_day","qualname":"<Date>::get_day","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getDay() method returns the day of the week for the specified date according to local time,\n where 0 represents Sunday. For the day of the month see getDate().","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":88223,"byte_end":88236,"line_start":1839,"line_end":1839,"column_start":12,"column_end":25},"name":"get_full_year","qualname":"<Date>::get_full_year","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getFullYear() method returns the year of the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":88546,"byte_end":88555,"line_start":1845,"line_end":1845,"column_start":12,"column_end":21},"name":"get_hours","qualname":"<Date>::get_hours","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getHours() method returns the hour for the specified date, according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":88892,"byte_end":88908,"line_start":1851,"line_end":1851,"column_start":12,"column_end":28},"name":"get_milliseconds","qualname":"<Date>::get_milliseconds","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getMilliseconds() method returns the milliseconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":89225,"byte_end":89236,"line_start":1857,"line_end":1857,"column_start":12,"column_end":23},"name":"get_minutes","qualname":"<Date>::get_minutes","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getMinutes() method returns the minutes in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":89627,"byte_end":89636,"line_start":1864,"line_end":1864,"column_start":12,"column_end":21},"name":"get_month","qualname":"<Date>::get_month","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getMonth() method returns the month in the specified date according to local time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":89953,"byte_end":89964,"line_start":1870,"line_end":1870,"column_start":12,"column_end":23},"name":"get_seconds","qualname":"<Date>::get_seconds","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getSeconds() method returns the seconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":90317,"byte_end":90325,"line_start":1877,"line_end":1877,"column_start":12,"column_end":20},"name":"get_time","qualname":"<Date>::get_time","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The getTime() method returns the numeric value corresponding to the time for the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":90701,"byte_end":90720,"line_start":1884,"line_end":1884,"column_start":12,"column_end":31},"name":"get_timezone_offset","qualname":"<Date>::get_timezone_offset","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The getTimezoneOffset() method returns the time zone difference, in minutes,\n from current locale (host system settings) to UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":91065,"byte_end":91077,"line_start":1891,"line_end":1891,"column_start":12,"column_end":24},"name":"get_utc_date","qualname":"<Date>::get_utc_date","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCDate() method returns the day (date) of the month in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":91438,"byte_end":91449,"line_start":1898,"line_end":1898,"column_start":12,"column_end":23},"name":"get_utc_day","qualname":"<Date>::get_utc_day","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCDay() method returns the day of the week in the specified date according to universal time,\n where 0 represents Sunday.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":91779,"byte_end":91796,"line_start":1904,"line_end":1904,"column_start":12,"column_end":29},"name":"get_utc_full_year","qualname":"<Date>::get_utc_full_year","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCFullYear() method returns the year in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":92118,"byte_end":92131,"line_start":1910,"line_end":1910,"column_start":12,"column_end":25},"name":"get_utc_hours","qualname":"<Date>::get_utc_hours","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCHours() method returns the hours in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":92489,"byte_end":92509,"line_start":1917,"line_end":1917,"column_start":12,"column_end":32},"name":"get_utc_milliseconds","qualname":"<Date>::get_utc_milliseconds","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCMilliseconds() method returns the milliseconds in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":92839,"byte_end":92854,"line_start":1923,"line_end":1923,"column_start":12,"column_end":27},"name":"get_utc_minutes","qualname":"<Date>::get_utc_minutes","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCMinutes() method returns the minutes in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":93251,"byte_end":93264,"line_start":1930,"line_end":1930,"column_start":12,"column_end":25},"name":"get_utc_month","qualname":"<Date>::get_utc_month","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCMonth() returns the month of the specified date according to universal time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":93594,"byte_end":93609,"line_start":1936,"line_end":1936,"column_start":12,"column_end":27},"name":"get_utc_seconds","qualname":"<Date>::get_utc_seconds","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCSeconds() method returns the seconds in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":93999,"byte_end":94002,"line_start":1944,"line_end":1944,"column_start":12,"column_end":15},"name":"new","qualname":"<Date>::new","value":"fn (init: &JsValue) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript Date instance that represents\n a single moment in time. Date objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":94291,"byte_end":94296,"line_start":1951,"line_end":1951,"column_start":12,"column_end":17},"name":"new_0","qualname":"<Date>::new_0","value":"fn () -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript Date instance that represents the current moment in\n time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":94611,"byte_end":94614,"line_start":1958,"line_end":1958,"column_start":12,"column_end":15},"name":"now","qualname":"<Date>::now","value":"fn () -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.now()` method returns the number of milliseconds\n elapsed since January 1, 1970 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":95080,"byte_end":95085,"line_start":1966,"line_end":1966,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"fn (date: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Date.parse() method parses a string representation of a date, and returns the number of milliseconds\n since January 1, 1970, 00:00:00 UTC or NaN if the string is unrecognized or, in some cases,\n contains illegal date values (e.g. 2015-02-31).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":95411,"byte_end":95419,"line_start":1972,"line_end":1972,"column_start":12,"column_end":20},"name":"set_date","qualname":"<Date>::set_date","value":"fn (&self, day: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setDate() method sets the day of the Date object relative to the beginning of the currently set month.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":95778,"byte_end":95791,"line_start":1979,"line_end":1979,"column_start":12,"column_end":25},"name":"set_full_year","qualname":"<Date>::set_full_year","value":"fn (&self, year: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setFullYear() method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":96254,"byte_end":96263,"line_start":1987,"line_end":1987,"column_start":12,"column_end":21},"name":"set_hours","qualname":"<Date>::set_hours","value":"fn (&self, hours: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setHours() method sets the hours for a specified date according to local time,\n and returns the number of milliseconds since January 1, 1970 00:00:00 UTC until the time represented\n by the updated Date instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":96608,"byte_end":96624,"line_start":1993,"line_end":1993,"column_start":12,"column_end":28},"name":"set_milliseconds","qualname":"<Date>::set_milliseconds","value":"fn (&self, milliseconds: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setMilliseconds() method sets the milliseconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":96956,"byte_end":96967,"line_start":1999,"line_end":1999,"column_start":12,"column_end":23},"name":"set_minutes","qualname":"<Date>::set_minutes","value":"fn (&self, minutes: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setMinutes() method sets the minutes for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":97298,"byte_end":97307,"line_start":2005,"line_end":2005,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Date>::set_month","value":"fn (&self, month: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setMonth() method sets the month for a specified date according to the currently set year.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":97632,"byte_end":97643,"line_start":2011,"line_end":2011,"column_start":12,"column_end":23},"name":"set_seconds","qualname":"<Date>::set_seconds","value":"fn (&self, seconds: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setSeconds() method sets the seconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":98016,"byte_end":98024,"line_start":2018,"line_end":2018,"column_start":12,"column_end":20},"name":"set_time","qualname":"<Date>::set_time","value":"fn (&self, time: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setTime() method sets the Date object to the time represented by a number of milliseconds\n since January 1, 1970, 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":98369,"byte_end":98381,"line_start":2025,"line_end":2025,"column_start":12,"column_end":24},"name":"set_utc_date","qualname":"<Date>::set_utc_date","value":"fn (&self, day: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCDate() method sets the day of the month for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":98722,"byte_end":98739,"line_start":2031,"line_end":2031,"column_start":12,"column_end":29},"name":"set_utc_full_year","qualname":"<Date>::set_utc_full_year","value":"fn (&self, year: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCFullYear() method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":99215,"byte_end":99228,"line_start":2039,"line_end":2039,"column_start":12,"column_end":25},"name":"set_utc_hours","qualname":"<Date>::set_utc_hours","value":"fn (&self, hours: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCHours() method sets the hour for a specified date according to universal time,\n and returns the number of milliseconds since  January 1, 1970 00:00:00 UTC until the time\n represented by the updated Date instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":99594,"byte_end":99614,"line_start":2046,"line_end":2046,"column_start":12,"column_end":32},"name":"set_utc_milliseconds","qualname":"<Date>::set_utc_milliseconds","value":"fn (&self, milliseconds: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCMilliseconds() method sets the milliseconds for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":99959,"byte_end":99974,"line_start":2052,"line_end":2052,"column_start":12,"column_end":27},"name":"set_utc_minutes","qualname":"<Date>::set_utc_minutes","value":"fn (&self, minutes: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCMinutes() method sets the minutes for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":100306,"byte_end":100319,"line_start":2058,"line_end":2058,"column_start":12,"column_end":25},"name":"set_utc_month","qualname":"<Date>::set_utc_month","value":"fn (&self, month: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCMonth() method sets the month for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":100657,"byte_end":100672,"line_start":2064,"line_end":2064,"column_start":12,"column_end":27},"name":"set_utc_seconds","qualname":"<Date>::set_utc_seconds","value":"fn (&self, seconds: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCSeconds() method sets the seconds for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":101036,"byte_end":101050,"line_start":2071,"line_end":2071,"column_start":12,"column_end":26},"name":"to_date_string","qualname":"<Date>::to_date_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toDateString() method returns the date portion of a Date object\n in human readable form in American English.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":101579,"byte_end":101592,"line_start":2080,"line_end":2080,"column_start":12,"column_end":25},"name":"to_iso_string","qualname":"<Date>::to_iso_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toISOString() method returns a string in simplified extended ISO format (ISO\n 8601), which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or\n ±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero UTC offset,\n as denoted by the suffix \"Z\"","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":101887,"byte_end":101894,"line_start":2086,"line_end":2086,"column_start":12,"column_end":19},"name":"to_json","qualname":"<Date>::to_json","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toJSON() method returns a string representation of the Date object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":102651,"byte_end":102672,"line_start":2098,"line_end":2098,"column_start":12,"column_end":33},"name":"to_locale_date_string","qualname":"<Date>::to_locale_date_string","value":"fn (&self, locale: &str, options: &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleDateString() method returns a string with a language sensitive\n representation of the date portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions\n should be used and allow to customize the behavior of the function.\n In older implementations, which ignore the locales and options arguments,\n the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":103421,"byte_end":103437,"line_start":2110,"line_end":2110,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Date>::to_locale_string","value":"fn (&self, locale: &str, options: &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleString() method returns a string with a language sensitive\n representation of this date. The new locales and options arguments\n let applications specify the language whose formatting conventions\n should be used and customize the behavior of the function.\n In older implementations, which ignore the locales\n and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":104210,"byte_end":104231,"line_start":2121,"line_end":2121,"column_start":12,"column_end":33},"name":"to_locale_time_string","qualname":"<Date>::to_locale_time_string","value":"fn (&self, locale: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleTimeString() method returns a string with a language sensitive\n representation of the time portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions should be\n used and customize the behavior of the function. In older implementations, which ignore\n the locales and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":104559,"byte_end":104568,"line_start":2128,"line_end":2128,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Date>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing\n the specified Date object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":104923,"byte_end":104937,"line_start":2135,"line_end":2135,"column_start":12,"column_end":26},"name":"to_time_string","qualname":"<Date>::to_time_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toTimeString() method returns the time portion of a Date object in human\n readable form in American English.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":105257,"byte_end":105270,"line_start":2142,"line_end":2142,"column_start":12,"column_end":25},"name":"to_utc_string","qualname":"<Date>::to_utc_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toUTCString() method converts a date to a string,\n using the UTC time zone.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":105727,"byte_end":105730,"line_start":2151,"line_end":2151,"column_start":12,"column_end":15},"name":"utc","qualname":"<Date>::utc","value":"fn (year: f64, month: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.UTC()` method accepts the same parameters as the\n longest form of the constructor, and returns the number of\n milliseconds in a `Date` object since January 1, 1970,\n 00:00:00, universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106036,"byte_end":106044,"line_start":2158,"line_end":2158,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Date>::value_of","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The valueOf() method  returns the primitive value of\n a Date object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":87069,"byte_end":87084,"line_start":1815,"line_end":1815,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106150,"byte_end":106156,"line_start":2165,"line_end":2165,"column_start":14,"column_end":20},"name":"Object","qualname":"::Object","value":"Object {  }","parent":null,"children":[{"krate":0,"index":1973}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106546,"byte_end":106552,"line_start":2173,"line_end":2173,"column_start":12,"column_end":18},"name":"assign","qualname":"<Object>::assign","value":"fn (target: &Object, source: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.assign() method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":107004,"byte_end":107011,"line_start":2181,"line_end":2181,"column_start":12,"column_end":19},"name":"assign2","qualname":"<Object>::assign2","value":"fn (target: &Object, source1: &Object, source2: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.assign() method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":107482,"byte_end":107489,"line_start":2189,"line_end":2189,"column_start":12,"column_end":19},"name":"assign3","qualname":"<Object>::assign3","value":"fn (target: &Object, source1: &Object, source2: &Object, source3: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.assign() method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":107895,"byte_end":107906,"line_start":2197,"line_end":2197,"column_start":12,"column_end":23},"name":"constructor","qualname":"<Object>::constructor","value":"fn (&self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The constructor property returns a reference to the Object constructor\n function that created the instance object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":108265,"byte_end":108271,"line_start":2204,"line_end":2204,"column_start":12,"column_end":18},"name":"create","qualname":"<Object>::create","value":"fn (prototype: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.create() method creates a new object, using an existing\n object to provide the newly created object's prototype.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":108711,"byte_end":108726,"line_start":2212,"line_end":2212,"column_start":12,"column_end":27},"name":"define_property","qualname":"<Object>::define_property","value":"fn (obj: &Object, prop: &JsValue, descriptor: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The static method Object.defineProperty() defines a new\n property directly on an object, or modifies an existing\n property on an object, and returns the object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":109168,"byte_end":109185,"line_start":2220,"line_end":2220,"column_start":12,"column_end":29},"name":"define_properties","qualname":"<Object>::define_properties","value":"fn (obj: &Object, props: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.defineProperties() method defines new or modifies\n existing properties directly on an object, returning the\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":109718,"byte_end":109725,"line_start":2230,"line_end":2230,"column_start":12,"column_end":19},"name":"entries","qualname":"<Object>::entries","value":"fn (object: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Object.entries() method returns an array of a given\n object's own enumerable property [key, value] pairs, in the\n same order as that provided by a for...in loop (the difference\n being that a for-in loop enumerates properties in the\n prototype chain as well).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":110338,"byte_end":110344,"line_start":2240,"line_end":2240,"column_start":12,"column_end":18},"name":"freeze","qualname":"<Object>::freeze","value":"fn (value: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.freeze()` method freezes an object: that is, prevents new\n properties from being added to it; prevents existing properties from\n being removed; and prevents existing properties, or their enumerability,\n configurability, or writability, from being changed, it also prevents\n the prototype from being changed. The method returns the passed object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":110699,"byte_end":110711,"line_start":2247,"line_end":2247,"column_start":12,"column_end":24},"name":"from_entries","qualname":"<Object>::from_entries","value":"fn (iterable: &JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The Object.fromEntries() method transforms a list of key-value pairs\n into an object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":111236,"byte_end":111263,"line_start":2256,"line_end":2256,"column_start":12,"column_end":39},"name":"get_own_property_descriptor","qualname":"<Object>::get_own_property_descriptor","value":"fn (obj: &Object, prop: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The Object.getOwnPropertyDescriptor() method returns a\n property descriptor for an own property (that is, one directly\n present on an object and not in the object's prototype chain)\n of a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":111671,"byte_end":111699,"line_start":2263,"line_end":2263,"column_start":12,"column_end":40},"name":"get_own_property_descriptors","qualname":"<Object>::get_own_property_descriptors","value":"fn (obj: &Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The Object.getOwnPropertyDescriptors() method returns all own\n property descriptors of a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":112168,"byte_end":112190,"line_start":2271,"line_end":2271,"column_start":12,"column_end":34},"name":"get_own_property_names","qualname":"<Object>::get_own_property_names","value":"fn (obj: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Object.getOwnPropertyNames() method returns an array of\n all properties (including non-enumerable properties except for\n those which use Symbol) found directly upon a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":112590,"byte_end":112614,"line_start":2278,"line_end":2278,"column_start":12,"column_end":36},"name":"get_own_property_symbols","qualname":"<Object>::get_own_property_symbols","value":"fn (obj: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Object.getOwnPropertySymbols() method returns an array of\n all symbol properties found directly upon a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":113026,"byte_end":113042,"line_start":2286,"line_end":2286,"column_start":12,"column_end":28},"name":"get_prototype_of","qualname":"<Object>::get_prototype_of","value":"fn (obj: &JsValue) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.getPrototypeOf() method returns the prototype\n (i.e. the value of the internal [[Prototype]] property) of the\n specified object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":113455,"byte_end":113471,"line_start":2294,"line_end":2294,"column_start":12,"column_end":28},"name":"has_own_property","qualname":"<Object>::has_own_property","value":"fn (&self, property: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `hasOwnProperty()` method returns a boolean indicating whether the\n object has the specified property as its own property (as opposed to\n inheriting it).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":113784,"byte_end":113786,"line_start":2300,"line_end":2300,"column_start":12,"column_end":14},"name":"is","qualname":"<Object>::is","value":"fn (value_1: &JsValue, value_2: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Object.is() method determines whether two values are the same value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":114194,"byte_end":114207,"line_start":2307,"line_end":2307,"column_start":12,"column_end":25},"name":"is_extensible","qualname":"<Object>::is_extensible","value":"fn (object: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isExtensible()` method determines if an object is extensible\n (whether it can have new properties added to it).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":114514,"byte_end":114523,"line_start":2313,"line_end":2313,"column_start":12,"column_end":21},"name":"is_frozen","qualname":"<Object>::is_frozen","value":"fn (object: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isFrozen()` determines if an object is frozen.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":114837,"byte_end":114846,"line_start":2319,"line_end":2319,"column_start":12,"column_end":21},"name":"is_sealed","qualname":"<Object>::is_sealed","value":"fn (object: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isSealed()` method determines if an object is sealed.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":115186,"byte_end":115201,"line_start":2326,"line_end":2326,"column_start":12,"column_end":27},"name":"is_prototype_of","qualname":"<Object>::is_prototype_of","value":"fn (&self, value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isPrototypeOf()` method checks if an object exists in another\n object's prototype chain.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":115576,"byte_end":115580,"line_start":2333,"line_end":2333,"column_start":12,"column_end":16},"name":"keys","qualname":"<Object>::keys","value":"fn (object: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.keys()` method returns an array of a given object's property\n names, in the same order as we get with a normal loop.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":115840,"byte_end":115843,"line_start":2339,"line_end":2339,"column_start":12,"column_end":15},"name":"new","qualname":"<Object>::new","value":"fn () -> Object","parent":null,"children":[],"decl_id":null,"docs":" The [`Object`] constructor creates an object wrapper.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":116260,"byte_end":116278,"line_start":2347,"line_end":2347,"column_start":12,"column_end":30},"name":"prevent_extensions","qualname":"<Object>::prevent_extensions","value":"fn (object: &Object) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `Object.preventExtensions()` method prevents new properties from\n ever being added to an object (i.e. prevents future extensions to the\n object).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":116642,"byte_end":116664,"line_start":2354,"line_end":2354,"column_start":12,"column_end":34},"name":"property_is_enumerable","qualname":"<Object>::property_is_enumerable","value":"fn (&self, property: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `propertyIsEnumerable()` method returns a Boolean indicating\n whether the specified property is enumerable.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":117161,"byte_end":117165,"line_start":2363,"line_end":2363,"column_start":12,"column_end":16},"name":"seal","qualname":"<Object>::seal","value":"fn (value: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.seal()` method seals an object, preventing new properties\n from being added to it and marking all existing properties as\n non-configurable.  Values of present properties can still be changed as\n long as they are writable.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":117595,"byte_end":117611,"line_start":2371,"line_end":2371,"column_start":12,"column_end":28},"name":"set_prototype_of","qualname":"<Object>::set_prototype_of","value":"fn (object: &Object, prototype: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.setPrototypeOf()` method sets the prototype (i.e., the\n internal `[[Prototype]]` property) of a specified object to another\n object or `null`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":118049,"byte_end":118065,"line_start":2379,"line_end":2379,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Object>::to_locale_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string representing the object.\n This method is meant to be overridden by derived objects for\n locale-specific purposes.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":118362,"byte_end":118371,"line_start":2385,"line_end":2385,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Object>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":118684,"byte_end":118692,"line_start":2392,"line_end":2392,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Object>::value_of","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of the\n specified object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119192,"byte_end":119198,"line_start":2401,"line_end":2401,"column_start":12,"column_end":18},"name":"values","qualname":"<Object>::values","value":"fn (object: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.values()` method returns an array of a given object's own\n enumerable property values, in the same order as that provided by a\n `for...in` loop (the difference being that a for-in loop enumerates\n properties in the prototype chain as well).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":106080,"byte_end":106095,"line_start":2162,"line_end":2162,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119447,"byte_end":119455,"line_start":2410,"line_end":2410,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Object>::try_from","value":"fn (val: &JsValue) -> Option<&Object>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Object` value of this JS value if it's an instance of an\n object.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119858,"byte_end":119863,"line_start":2432,"line_end":2432,"column_start":14,"column_end":19},"name":"Proxy","qualname":"::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":2037}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119788,"byte_end":119803,"line_start":2429,"line_end":2429,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119788,"byte_end":119803,"line_start":2429,"line_end":2429,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119788,"byte_end":119803,"line_start":2429,"line_end":2429,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":120215,"byte_end":120218,"line_start":2440,"line_end":2440,"column_start":12,"column_end":15},"name":"new","qualname":"<Proxy>::new","value":"fn (target: &JsValue, handler: &Object) -> Proxy","parent":null,"children":[],"decl_id":null,"docs":" The [`Proxy`] object is used to define custom behavior for fundamental\n operations (e.g. property lookup, assignment, enumeration, function\n invocation, etc).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119788,"byte_end":119803,"line_start":2429,"line_end":2429,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119788,"byte_end":119803,"line_start":2429,"line_end":2429,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":120552,"byte_end":120561,"line_start":2447,"line_end":2447,"column_start":12,"column_end":21},"name":"revocable","qualname":"<Proxy>::revocable","value":"fn (target: &JsValue, handler: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Proxy.revocable()` method is used to create a revocable [`Proxy`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119788,"byte_end":119803,"line_start":2429,"line_end":2429,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119788,"byte_end":119803,"line_start":2429,"line_end":2429,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":121011,"byte_end":121021,"line_start":2459,"line_end":2459,"column_start":14,"column_end":24},"name":"RangeError","qualname":"::RangeError","value":"RangeError {  }","parent":null,"children":[{"krate":0,"index":2110}],"decl_id":null,"docs":" The RangeError object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":120626,"byte_end":120641,"line_start":2451,"line_end":2451,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":120626,"byte_end":120641,"line_start":2451,"line_end":2451,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":120626,"byte_end":120641,"line_start":2451,"line_end":2451,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":120640,"byte_end":120641,"line_start":2451,"line_end":2451,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":121313,"byte_end":121316,"line_start":2466,"line_end":2466,"column_start":12,"column_end":15},"name":"new","qualname":"<RangeError>::new","value":"fn (message: &str) -> RangeError","parent":null,"children":[],"decl_id":null,"docs":" The RangeError object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":120626,"byte_end":120641,"line_start":2451,"line_end":2451,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":120626,"byte_end":120641,"line_start":2451,"line_end":2451,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2187},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":121747,"byte_end":121761,"line_start":2478,"line_end":2478,"column_start":14,"column_end":28},"name":"ReferenceError","qualname":"::ReferenceError","value":"ReferenceError {  }","parent":null,"children":[{"krate":0,"index":2188}],"decl_id":null,"docs":" The ReferenceError object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":121368,"byte_end":121383,"line_start":2470,"line_end":2470,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":121368,"byte_end":121383,"line_start":2470,"line_end":2470,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":121368,"byte_end":121383,"line_start":2470,"line_end":2470,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":121382,"byte_end":121383,"line_start":2470,"line_end":2470,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122047,"byte_end":122050,"line_start":2485,"line_end":2485,"column_start":12,"column_end":15},"name":"new","qualname":"<ReferenceError>::new","value":"fn (message: &str) -> ReferenceError","parent":null,"children":[],"decl_id":null,"docs":" The ReferenceError object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":121368,"byte_end":121383,"line_start":2470,"line_end":2470,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":121368,"byte_end":121383,"line_start":2470,"line_end":2470,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":71},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122121,"byte_end":122128,"line_start":2489,"line_end":2489,"column_start":9,"column_end":16},"name":"Reflect","qualname":"::Reflect","value":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122088,"byte_end":122112,"line_start":2488,"line_end":2488,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122525,"byte_end":122530,"line_start":2500,"line_end":2500,"column_start":16,"column_end":21},"name":"apply","qualname":"::Reflect::apply","value":"fn (target: &Function, this_argument: &JsValue, arguments_list: &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.apply()` method calls a target function with\n arguments as specified.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":123130,"byte_end":123139,"line_start":2512,"line_end":2512,"column_start":16,"column_end":25},"name":"construct","qualname":"::Reflect::construct","value":"fn (target: &Function, arguments_list: &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2202},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":123688,"byte_end":123713,"line_start":2520,"line_end":2520,"column_start":16,"column_end":41},"name":"construct_with_new_target","qualname":"::Reflect::construct_with_new_target","value":"fn (target: &Function, arguments_list: &Array, new_target: &Function) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":124230,"byte_end":124245,"line_start":2531,"line_end":2531,"column_start":16,"column_end":31},"name":"define_property","qualname":"::Reflect::define_property","value":"fn (target: &Object, property_key: &JsValue, attributes: &Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.defineProperty()` method is like\n `Object.defineProperty()` but returns a `Boolean`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":124774,"byte_end":124789,"line_start":2542,"line_end":2542,"column_start":16,"column_end":31},"name":"delete_property","qualname":"::Reflect::delete_property","value":"fn (target: &Object, key: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.deleteProperty()` method allows to delete\n properties.  It is like the `delete` operator as a function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":125199,"byte_end":125202,"line_start":2549,"line_end":2549,"column_start":16,"column_end":19},"name":"get","qualname":"::Reflect::get","value":"fn (target: &JsValue, key: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.get()` method works like getting a property from\n an object (`target[propertyKey]`) as a function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":125461,"byte_end":125468,"line_start":2553,"line_end":2553,"column_start":16,"column_end":23},"name":"get_f64","qualname":"::Reflect::get_f64","value":"fn (target: &JsValue, key: f64) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Reflect::get`](#method.get) except the key is an `f64`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":125721,"byte_end":125728,"line_start":2557,"line_end":2557,"column_start":16,"column_end":23},"name":"get_u32","qualname":"::Reflect::get_u32","value":"fn (target: &JsValue, key: u32) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Reflect::get`](#method.get) except the key is a `u32`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":126300,"byte_end":126327,"line_start":2565,"line_end":2565,"column_start":16,"column_end":43},"name":"get_own_property_descriptor","qualname":"::Reflect::get_own_property_descriptor","value":"fn (target: &Object, property_key: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getOwnPropertyDescriptor()` method is similar to\n `Object.getOwnPropertyDescriptor()`. It returns a property descriptor\n of the given property if it exists on the object, `undefined` otherwise.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":126936,"byte_end":126952,"line_start":2577,"line_end":2577,"column_start":16,"column_end":32},"name":"get_prototype_of","qualname":"::Reflect::get_prototype_of","value":"fn (target: &JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getPrototypeOf()` method is almost the same\n method as `Object.getPrototypeOf()`. It returns the prototype\n (i.e. the value of the internal `[[Prototype]]` property) of\n the specified object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":127308,"byte_end":127311,"line_start":2584,"line_end":2584,"column_start":16,"column_end":19},"name":"has","qualname":"::Reflect::has","value":"fn (target: &JsValue, property_key: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.has()` method works like the in operator as a\n function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":127858,"byte_end":127871,"line_start":2592,"line_end":2592,"column_start":16,"column_end":29},"name":"is_extensible","qualname":"::Reflect::is_extensible","value":"fn (target: &Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.isExtensible()` method determines if an object is\n extensible (whether it can have new properties added to it). It is\n similar to `Object.isExtensible()`, but with some differences.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2222},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":128268,"byte_end":128276,"line_start":2599,"line_end":2599,"column_start":16,"column_end":24},"name":"own_keys","qualname":"::Reflect::own_keys","value":"fn (target: &JsValue) -> Result<Array, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.ownKeys()` method returns an array of the\n target object's own property keys.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":128852,"byte_end":128870,"line_start":2608,"line_end":2608,"column_start":16,"column_end":34},"name":"prevent_extensions","qualname":"::Reflect::prevent_extensions","value":"fn (target: &Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.preventExtensions()` method prevents new\n properties from ever being added to an object (i.e. prevents\n future extensions to the object). It is similar to\n `Object.preventExtensions()`, but with some differences.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":129225,"byte_end":129228,"line_start":2615,"line_end":2615,"column_start":16,"column_end":19},"name":"set","qualname":"::Reflect::set","value":"fn (target: &JsValue, property_key: &JsValue, value: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":129557,"byte_end":129564,"line_start":2623,"line_end":2623,"column_start":16,"column_end":23},"name":"set_f64","qualname":"::Reflect::set_f64","value":"fn (target: &JsValue, property_key: f64, value: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Reflect::set`](#method.set) except the key is an `f64`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":129887,"byte_end":129894,"line_start":2631,"line_end":2631,"column_start":16,"column_end":23},"name":"set_u32","qualname":"::Reflect::set_u32","value":"fn (target: &JsValue, property_key: u32, value: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Reflect::set`](#method.set) except the key is a `u32`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":130348,"byte_end":130365,"line_start":2642,"line_end":2642,"column_start":16,"column_end":33},"name":"set_with_receiver","qualname":"::Reflect::set_with_receiver","value":"fn (target: &JsValue, property_key: &JsValue, value: &JsValue, receiver: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131038,"byte_end":131054,"line_start":2656,"line_end":2656,"column_start":16,"column_end":32},"name":"set_prototype_of","qualname":"::Reflect::set_prototype_of","value":"fn (target: &Object, prototype: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.setPrototypeOf()` method is the same\n method as `Object.setPrototypeOf()`. It sets the prototype\n (i.e., the internal `[[Prototype]]` property) of a specified\n object to another object or to null.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":122169,"byte_end":122184,"line_start":2493,"line_end":2493,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2378},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131261,"byte_end":131267,"line_start":2665,"line_end":2665,"column_start":14,"column_end":20},"name":"RegExp","qualname":"::RegExp","value":"RegExp {  }","parent":null,"children":[{"krate":0,"index":2379}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131152,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131559,"byte_end":131563,"line_start":2672,"line_end":2672,"column_start":12,"column_end":16},"name":"exec","qualname":"<RegExp>::exec","value":"fn (&self, text: &str) -> Option<Array>","parent":null,"children":[],"decl_id":null,"docs":" The exec() method executes a search for a match in a specified\n string. Returns a result array, or null.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131906,"byte_end":131911,"line_start":2679,"line_end":2679,"column_start":12,"column_end":17},"name":"flags","qualname":"<RegExp>::flags","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The flags property returns a string consisting of the flags of\n the current regular expression object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":132316,"byte_end":132322,"line_start":2687,"line_end":2687,"column_start":12,"column_end":18},"name":"global","qualname":"<RegExp>::global","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global property indicates whether or not the \"g\" flag is\n used with the regular expression. global is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":132757,"byte_end":132768,"line_start":2695,"line_end":2695,"column_start":12,"column_end":23},"name":"ignore_case","qualname":"<RegExp>::ignore_case","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The ignoreCase property indicates whether or not the \"i\" flag\n is used with the regular expression. ignoreCase is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":133212,"byte_end":133217,"line_start":2704,"line_end":2704,"column_start":12,"column_end":17},"name":"input","qualname":"<RegExp>::input","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard input property is a static property of\n regular expressions that contains the string against which a\n regular expression is matched. RegExp.$_ is an alias for this\n property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":133594,"byte_end":133604,"line_start":2711,"line_end":2711,"column_start":12,"column_end":22},"name":"last_index","qualname":"<RegExp>::last_index","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":133989,"byte_end":134003,"line_start":2718,"line_end":2718,"column_start":12,"column_end":26},"name":"set_last_index","qualname":"<RegExp>::set_last_index","value":"fn (&self, index: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":134457,"byte_end":134467,"line_start":2726,"line_end":2726,"column_start":12,"column_end":22},"name":"last_match","qualname":"<RegExp>::last_match","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastMatch property is a static and read-only\n property of regular expressions that contains the last matched\n characters. RegExp.$& is an alias for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":134935,"byte_end":134945,"line_start":2735,"line_end":2735,"column_start":12,"column_end":22},"name":"last_paren","qualname":"<RegExp>::last_paren","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastParen property is a static and read-only\n property of regular expressions that contains the last\n parenthesized substring match, if any. RegExp.$+ is an alias\n for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":135418,"byte_end":135430,"line_start":2744,"line_end":2744,"column_start":12,"column_end":24},"name":"left_context","qualname":"<RegExp>::left_context","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard leftContext property is a static and\n read-only property of regular expressions that contains the\n substring preceding the most recent match. RegExp.$` is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":135831,"byte_end":135840,"line_start":2752,"line_end":2752,"column_start":12,"column_end":21},"name":"multiline","qualname":"<RegExp>::multiline","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The multiline property indicates whether or not the \"m\" flag\n is used with the regular expression. multiline is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":136267,"byte_end":136269,"line_start":2760,"line_end":2760,"column_start":12,"column_end":14},"name":"n1","qualname":"<RegExp>::n1","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard $1, $2, $3, $4, $5, $6, $7, $8, $9 properties\n are static and read-only properties of regular expressions\n that contain parenthesized substring matches.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":136367,"byte_end":136369,"line_start":2762,"line_end":2762,"column_start":12,"column_end":14},"name":"n2","qualname":"<RegExp>::n2","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":136467,"byte_end":136469,"line_start":2764,"line_end":2764,"column_start":12,"column_end":14},"name":"n3","qualname":"<RegExp>::n3","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":136567,"byte_end":136569,"line_start":2766,"line_end":2766,"column_start":12,"column_end":14},"name":"n4","qualname":"<RegExp>::n4","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":136667,"byte_end":136669,"line_start":2768,"line_end":2768,"column_start":12,"column_end":14},"name":"n5","qualname":"<RegExp>::n5","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":136767,"byte_end":136769,"line_start":2770,"line_end":2770,"column_start":12,"column_end":14},"name":"n6","qualname":"<RegExp>::n6","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":136867,"byte_end":136869,"line_start":2772,"line_end":2772,"column_start":12,"column_end":14},"name":"n7","qualname":"<RegExp>::n7","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":136967,"byte_end":136969,"line_start":2774,"line_end":2774,"column_start":12,"column_end":14},"name":"n8","qualname":"<RegExp>::n8","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":137067,"byte_end":137069,"line_start":2776,"line_end":2776,"column_start":12,"column_end":14},"name":"n9","qualname":"<RegExp>::n9","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":137356,"byte_end":137359,"line_start":2782,"line_end":2782,"column_start":12,"column_end":15},"name":"new","qualname":"<RegExp>::new","value":"fn (pattern: &str, flags: &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":" The RegExp constructor creates a regular expression object for matching text with a pattern.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":137443,"byte_end":137453,"line_start":2784,"line_end":2784,"column_start":12,"column_end":22},"name":"new_regexp","qualname":"<RegExp>::new_regexp","value":"fn (pattern: &RegExp, flags: &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":137956,"byte_end":137969,"line_start":2793,"line_end":2793,"column_start":12,"column_end":25},"name":"right_context","qualname":"<RegExp>::right_context","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard rightContext property is a static and\n read-only property of regular expressions that contains the\n substring following the most recent match. RegExp.$' is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":138351,"byte_end":138357,"line_start":2801,"line_end":2801,"column_start":12,"column_end":18},"name":"source","qualname":"<RegExp>::source","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The source property returns a String containing the source\n text of the regexp object, and it doesn't contain the two\n forward slashes on both sides and any flags.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":138852,"byte_end":138858,"line_start":2811,"line_end":2811,"column_start":12,"column_end":18},"name":"sticky","qualname":"<RegExp>::sticky","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The sticky property reflects whether or not the search is\n sticky (searches in strings only from the index indicated by\n the lastIndex property of this regular expression). sticky is\n a read-only property of an individual regular expression\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139201,"byte_end":139205,"line_start":2819,"line_end":2819,"column_start":12,"column_end":16},"name":"test","qualname":"<RegExp>::test","value":"fn (&self, text: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The test() method executes a search for a match between a\n regular expression and a specified string. Returns true or\n false.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139528,"byte_end":139537,"line_start":2826,"line_end":2826,"column_start":12,"column_end":21},"name":"to_string","qualname":"<RegExp>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the\n regular expression.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139943,"byte_end":139950,"line_start":2834,"line_end":2834,"column_start":12,"column_end":19},"name":"unicode","qualname":"<RegExp>::unicode","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The unicode property indicates whether or not the \"u\" flag is\n used with a regular expression. unicode is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":131138,"byte_end":131153,"line_start":2661,"line_end":2661,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":140108,"byte_end":140111,"line_start":2842,"line_end":2842,"column_start":14,"column_end":17},"name":"Set","qualname":"::Set","value":"Set {  }","parent":null,"children":[{"krate":0,"index":2469}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139999,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":140391,"byte_end":140394,"line_start":2849,"line_end":2849,"column_start":12,"column_end":15},"name":"add","qualname":"<Set>::add","value":"fn (&self, value: &JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new element with a specified value to the\n end of a [`Set`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":140673,"byte_end":140678,"line_start":2855,"line_end":2855,"column_start":12,"column_end":17},"name":"clear","qualname":"<Set>::clear","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `clear()` method removes all elements from a [`Set`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":140952,"byte_end":140958,"line_start":2862,"line_end":2862,"column_start":12,"column_end":18},"name":"delete","qualname":"<Set>::delete","value":"fn (&self, value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":141311,"byte_end":141319,"line_start":2869,"line_end":2869,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Set>::for_each","value":"fn (&self, callback: &mut dyn FnMut(JsValue, JsValue, Set)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The forEach() method executes a provided function once for each value\n in the Set object, in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":141691,"byte_end":141694,"line_start":2876,"line_end":2876,"column_start":12,"column_end":15},"name":"has","qualname":"<Set>::has","value":"fn (&self, value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified value exists in a [`Set`] object or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":142024,"byte_end":142027,"line_start":2883,"line_end":2883,"column_start":12,"column_end":15},"name":"new","qualname":"<Set>::new","value":"fn (init: &JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The [`Set`] object lets you store unique values of any type, whether\n primitive values or object references.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":142331,"byte_end":142335,"line_start":2890,"line_end":2890,"column_start":12,"column_end":16},"name":"size","qualname":"<Set>::size","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size accessor property returns the number of elements in a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":139985,"byte_end":140000,"line_start":2838,"line_end":2838,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":142970,"byte_end":142977,"line_start":2904,"line_end":2904,"column_start":12,"column_end":19},"name":"entries","qualname":"<Set>::entries","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Iterator object that contains an\n array of [value, value] for each element in the Set object, in insertion\n order. For Set objects there is no key like in Map objects. However, to\n keep the API similar to the Map object, each entry has the same value\n for its key and value here, so that an array [value, value] is returned.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":142374,"byte_end":142389,"line_start":2894,"line_end":2894,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":142374,"byte_end":142389,"line_start":2894,"line_end":2894,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":143342,"byte_end":143346,"line_start":2912,"line_end":2912,"column_start":12,"column_end":16},"name":"keys","qualname":"<Set>::keys","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method is an alias for this method (for similarity with\n Map objects); it behaves exactly the same and returns values\n of Set elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":142374,"byte_end":142389,"line_start":2894,"line_end":2894,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":142374,"byte_end":142389,"line_start":2894,"line_end":2894,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":143688,"byte_end":143694,"line_start":2919,"line_end":2919,"column_start":12,"column_end":18},"name":"values","qualname":"<Set>::values","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Iterator object that contains the\n values for each element in the Set object in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":142374,"byte_end":142389,"line_start":2894,"line_end":2894,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":142374,"byte_end":142389,"line_start":2894,"line_end":2894,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":144186,"byte_end":144197,"line_start":2932,"line_end":2932,"column_start":14,"column_end":25},"name":"SyntaxError","qualname":"::SyntaxError","value":"SyntaxError {  }","parent":null,"children":[{"krate":0,"index":2556}],"decl_id":null,"docs":" A SyntaxError is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":143737,"byte_end":143752,"line_start":2923,"line_end":2923,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":143737,"byte_end":143752,"line_start":2923,"line_end":2923,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":143737,"byte_end":143752,"line_start":2923,"line_end":2923,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":143751,"byte_end":143752,"line_start":2923,"line_end":2923,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":144553,"byte_end":144556,"line_start":2940,"line_end":2940,"column_start":12,"column_end":15},"name":"new","qualname":"<SyntaxError>::new","value":"fn (message: &str) -> SyntaxError","parent":null,"children":[],"decl_id":null,"docs":" A SyntaxError is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":143737,"byte_end":143752,"line_start":2923,"line_end":2923,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":143737,"byte_end":143752,"line_start":2923,"line_end":2923,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2633},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":144971,"byte_end":144980,"line_start":2952,"line_end":2952,"column_start":14,"column_end":23},"name":"TypeError","qualname":"::TypeError","value":"TypeError {  }","parent":null,"children":[{"krate":0,"index":2634}],"decl_id":null,"docs":" The TypeError object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":144604,"byte_end":144619,"line_start":2944,"line_end":2944,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":144604,"byte_end":144619,"line_start":2944,"line_end":2944,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":144604,"byte_end":144619,"line_start":2944,"line_end":2944,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":144618,"byte_end":144619,"line_start":2944,"line_end":2944,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":145254,"byte_end":145257,"line_start":2959,"line_end":2959,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeError>::new","value":"fn (message: &str) -> TypeError","parent":null,"children":[],"decl_id":null,"docs":" The TypeError object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":144604,"byte_end":144619,"line_start":2944,"line_end":2944,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":144604,"byte_end":144619,"line_start":2944,"line_end":2944,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":145706,"byte_end":145714,"line_start":2971,"line_end":2971,"column_start":14,"column_end":22},"name":"UriError","qualname":"::UriError","value":"UriError {  }","parent":null,"children":[{"krate":0,"index":2712}],"decl_id":null,"docs":" The URIError object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":145302,"byte_end":145317,"line_start":2963,"line_end":2963,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":145302,"byte_end":145317,"line_start":2963,"line_end":2963,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":145302,"byte_end":145317,"line_start":2963,"line_end":2963,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":145316,"byte_end":145317,"line_start":2963,"line_end":2963,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146028,"byte_end":146031,"line_start":2978,"line_end":2978,"column_start":12,"column_end":15},"name":"new","qualname":"<UriError>::new","value":"fn (message: &str) -> UriError","parent":null,"children":[],"decl_id":null,"docs":" The URIError object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":145302,"byte_end":145317,"line_start":2963,"line_end":2963,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":145302,"byte_end":145317,"line_start":2963,"line_end":2963,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2795},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146197,"byte_end":146204,"line_start":2986,"line_end":2986,"column_start":14,"column_end":21},"name":"WeakMap","qualname":"::WeakMap","value":"WeakMap {  }","parent":null,"children":[{"krate":0,"index":2796}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146088,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146566,"byte_end":146569,"line_start":2994,"line_end":2994,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakMap>::new","value":"fn () -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The [`WeakMap`] object is a collection of key/value pairs in which the\n keys are weakly referenced.  The keys must be objects and the values can\n be arbitrary values.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146897,"byte_end":146900,"line_start":3001,"line_end":3001,"column_start":12,"column_end":15},"name":"set","qualname":"<WeakMap>::set","value":"fn (&self, key: &Object, value: &JsValue) -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method sets the value for the key in the [`WeakMap`] object.\n Returns the [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147225,"byte_end":147228,"line_start":3008,"line_end":3008,"column_start":12,"column_end":15},"name":"get","qualname":"<WeakMap>::get","value":"fn (&self, key: &Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The get() method returns a specified by key element\n from a [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147588,"byte_end":147591,"line_start":3015,"line_end":3015,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakMap>::has","value":"fn (&self, key: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified key exists in the [`WeakMap`] object or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147899,"byte_end":147905,"line_start":3022,"line_end":3022,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakMap>::delete","value":"fn (&self, key: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`WeakMap`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":146074,"byte_end":146089,"line_start":2982,"line_end":2982,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2876},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":148082,"byte_end":148089,"line_start":3030,"line_end":3030,"column_start":14,"column_end":21},"name":"WeakSet","qualname":"::WeakSet","value":"WeakSet {  }","parent":null,"children":[{"krate":0,"index":2877}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147973,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":148343,"byte_end":148346,"line_start":3036,"line_end":3036,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakSet>::new","value":"fn () -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `WeakSet` object lets you store weakly held objects in a collection.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":148641,"byte_end":148644,"line_start":3043,"line_end":3043,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakSet>::has","value":"fn (&self, value: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an object exists\n in a WeakSet or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":148936,"byte_end":148939,"line_start":3049,"line_end":3049,"column_start":12,"column_end":15},"name":"add","qualname":"<WeakSet>::add","value":"fn (&self, value: &Object) -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new object to the end of a WeakSet object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149248,"byte_end":149254,"line_start":3056,"line_end":3056,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakSet>::delete","value":"fn (&self, value: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a WeakSet\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":147959,"byte_end":147974,"line_start":3026,"line_end":3026,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149332,"byte_end":149343,"line_start":3060,"line_end":3060,"column_start":9,"column_end":20},"name":"WebAssembly","qualname":"::WebAssembly","value":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2958},{"krate":0,"index":2967},{"krate":0,"index":2965},{"krate":0,"index":2962},{"krate":0,"index":2960},{"krate":0,"index":2897},{"krate":0,"index":2949},{"krate":0,"index":2952},{"krate":0,"index":2955},{"krate":0,"index":3033},{"krate":0,"index":3042},{"krate":0,"index":3040},{"krate":0,"index":3037},{"krate":0,"index":3035},{"krate":0,"index":2969},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":3105},{"krate":0,"index":3114},{"krate":0,"index":3112},{"krate":0,"index":3109},{"krate":0,"index":3107},{"krate":0,"index":3044},{"krate":0,"index":3096},{"krate":0,"index":3099},{"krate":0,"index":3102},{"krate":0,"index":3177},{"krate":0,"index":3186},{"krate":0,"index":3184},{"krate":0,"index":3181},{"krate":0,"index":3179},{"krate":0,"index":3116},{"krate":0,"index":3168},{"krate":0,"index":3171},{"krate":0,"index":3174},{"krate":0,"index":3258},{"krate":0,"index":3267},{"krate":0,"index":3265},{"krate":0,"index":3262},{"krate":0,"index":3260},{"krate":0,"index":3188},{"krate":0,"index":3240},{"krate":0,"index":3243},{"krate":0,"index":3246},{"krate":0,"index":3249},{"krate":0,"index":3252},{"krate":0,"index":3255},{"krate":0,"index":3342},{"krate":0,"index":3351},{"krate":0,"index":3349},{"krate":0,"index":3346},{"krate":0,"index":3344},{"krate":0,"index":3269},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3327},{"krate":0,"index":3330},{"krate":0,"index":3333},{"krate":0,"index":3336},{"krate":0,"index":3339},{"krate":0,"index":3420},{"krate":0,"index":3429},{"krate":0,"index":3427},{"krate":0,"index":3424},{"krate":0,"index":3422},{"krate":0,"index":3353},{"krate":0,"index":3405},{"krate":0,"index":3408},{"krate":0,"index":3411},{"krate":0,"index":3414},{"krate":0,"index":3417}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149299,"byte_end":149323,"line_start":3059,"line_end":3059,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2887},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149947,"byte_end":149954,"line_start":3073,"line_end":3073,"column_start":16,"column_end":23},"name":"compile","qualname":"::WebAssembly::compile","value":"fn (buffer_source: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" `The WebAssembly.compile()` function compiles a `WebAssembly.Module`\n from WebAssembly binary code.  This function is useful if it is\n necessary to a compile a module before it can be instantiated\n (otherwise, the `WebAssembly.instantiate()` function should be used).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2889},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":150354,"byte_end":150372,"line_start":3080,"line_end":3080,"column_start":16,"column_end":34},"name":"instantiate_buffer","qualname":"::WebAssembly::instantiate_buffer","value":"fn (buffer: &[u8], imports: &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2891},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":150780,"byte_end":150798,"line_start":3087,"line_end":3087,"column_start":16,"column_end":34},"name":"instantiate_module","qualname":"::WebAssembly::instantiate_module","value":"fn (module: &Module, imports: &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2893},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":151355,"byte_end":151376,"line_start":3096,"line_end":3096,"column_start":16,"column_end":37},"name":"instantiate_streaming","qualname":"::WebAssembly::instantiate_streaming","value":"fn (response: &Promise, imports: &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiateStreaming()` function compiles and\n instantiates a WebAssembly module directly from a streamed\n underlying source. This is the most efficient, optimized way to load\n wasm code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":151861,"byte_end":151869,"line_start":3104,"line_end":3104,"column_start":16,"column_end":24},"name":"validate","qualname":"::WebAssembly::validate","value":"fn (buffer_source: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.validate()` function validates a given typed\n array of WebAssembly binary code, returning whether the bytes\n form a valid wasm module (`true`) or not (`false`).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":149388,"byte_end":149403,"line_start":3064,"line_end":3064,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":152479,"byte_end":152491,"line_start":3117,"line_end":3117,"column_start":18,"column_end":30},"name":"CompileError","qualname":"::WebAssembly::CompileError","value":"CompileError {  }","parent":null,"children":[{"krate":0,"index":2959}],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":151964,"byte_end":151979,"line_start":3108,"line_end":3108,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":151964,"byte_end":151979,"line_start":3108,"line_end":3108,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":151964,"byte_end":151979,"line_start":3108,"line_end":3108,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":151978,"byte_end":151979,"line_start":3108,"line_end":3108,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":152923,"byte_end":152926,"line_start":3125,"line_end":3125,"column_start":16,"column_end":19},"name":"new","qualname":"<CompileError>::new","value":"fn (message: &str) -> CompileError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":151964,"byte_end":151979,"line_start":3108,"line_end":3108,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":151964,"byte_end":151979,"line_start":3108,"line_end":3108,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":153576,"byte_end":153584,"line_start":3139,"line_end":3139,"column_start":18,"column_end":26},"name":"Instance","qualname":"::WebAssembly::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":3034}],"decl_id":null,"docs":" A `WebAssembly.Instance` object is a stateful, executable instance\n of a `WebAssembly.Module`. Instance objects contain all the exported\n WebAssembly functions that allow calling into WebAssembly code from\n JavaScript.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":152998,"byte_end":153013,"line_start":3129,"line_end":3129,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":152998,"byte_end":153013,"line_start":3129,"line_end":3129,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":152998,"byte_end":153013,"line_start":3129,"line_end":3129,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":153012,"byte_end":153013,"line_start":3129,"line_end":3129,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":154120,"byte_end":154123,"line_start":3148,"line_end":3148,"column_start":16,"column_end":19},"name":"new","qualname":"<Instance>::new","value":"fn (module: &Module, imports: &Object) -> Result<Instance, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Instance()` constructor function can be called to\n synchronously instantiate a given `WebAssembly.Module`\n object. However, the primary way to get an `Instance` is through the\n asynchronous `WebAssembly.instantiateStreaming()` function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":152998,"byte_end":153013,"line_start":3129,"line_end":3129,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":152998,"byte_end":153013,"line_start":3129,"line_end":3129,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":154717,"byte_end":154724,"line_start":3157,"line_end":3157,"column_start":16,"column_end":23},"name":"exports","qualname":"<Instance>::exports","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `exports` readonly property of the `WebAssembly.Instance` object\n prototype returns an object containing as its members all the\n functions exported from the WebAssembly module instance, to allow\n them to be accessed and used by JavaScript.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":152998,"byte_end":153013,"line_start":3129,"line_end":3129,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":152998,"byte_end":153013,"line_start":3129,"line_end":3129,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3105},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":155323,"byte_end":155332,"line_start":3170,"line_end":3170,"column_start":18,"column_end":27},"name":"LinkError","qualname":"::WebAssembly::LinkError","value":"LinkError {  }","parent":null,"children":[{"krate":0,"index":3106}],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":154793,"byte_end":154808,"line_start":3161,"line_end":3161,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":154793,"byte_end":154808,"line_start":3161,"line_end":3161,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":154793,"byte_end":154808,"line_start":3161,"line_end":3161,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":154807,"byte_end":154808,"line_start":3161,"line_end":3161,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":155779,"byte_end":155782,"line_start":3178,"line_end":3178,"column_start":16,"column_end":19},"name":"new","qualname":"<LinkError>::new","value":"fn (message: &str) -> LinkError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":154793,"byte_end":154808,"line_start":3161,"line_end":3161,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":154793,"byte_end":154808,"line_start":3161,"line_end":3161,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3177},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156368,"byte_end":156380,"line_start":3191,"line_end":3191,"column_start":18,"column_end":30},"name":"RuntimeError","qualname":"::WebAssembly::RuntimeError","value":"RuntimeError {  }","parent":null,"children":[{"krate":0,"index":3178}],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":155855,"byte_end":155870,"line_start":3182,"line_end":3182,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":155855,"byte_end":155870,"line_start":3182,"line_end":3182,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":155855,"byte_end":155870,"line_start":3182,"line_end":3182,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":155869,"byte_end":155870,"line_start":3182,"line_end":3182,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156810,"byte_end":156813,"line_start":3199,"line_end":3199,"column_start":16,"column_end":19},"name":"new","qualname":"<RuntimeError>::new","value":"fn (message: &str) -> RuntimeError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":155855,"byte_end":155870,"line_start":3182,"line_end":3182,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":155855,"byte_end":155870,"line_start":3182,"line_end":3182,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":157420,"byte_end":157426,"line_start":3212,"line_end":3212,"column_start":18,"column_end":24},"name":"Module","qualname":"::WebAssembly::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":3259}],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156897,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":157886,"byte_end":157889,"line_start":3220,"line_end":3220,"column_start":16,"column_end":19},"name":"new","qualname":"<Module>::new","value":"fn (buffer_source: &JsValue) -> Result<Module, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":158406,"byte_end":158421,"line_start":3228,"line_end":3228,"column_start":16,"column_end":31},"name":"custom_sections","qualname":"<Module>::custom_sections","value":"fn (module: &Module, sectionName: &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.customSections()` function returns a copy of the\n contents of all custom sections in the given module with the given\n string name.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":158869,"byte_end":158876,"line_start":3235,"line_end":3235,"column_start":16,"column_end":23},"name":"exports","qualname":"<Module>::exports","value":"fn (module: &Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.exports()` function returns an array containing\n descriptions of all the declared exports of the given `Module`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159305,"byte_end":159312,"line_start":3242,"line_end":3242,"column_start":16,"column_end":23},"name":"imports","qualname":"<Module>::imports","value":"fn (module: &Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.imports()` function returns an array containing\n descriptions of all the declared imports of the given `Module`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":156883,"byte_end":156898,"line_start":3203,"line_end":3203,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3342},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159814,"byte_end":159819,"line_start":3254,"line_end":3254,"column_start":18,"column_end":23},"name":"Table","qualname":"::WebAssembly::Table","value":"Table {  }","parent":null,"children":[{"krate":0,"index":3343}],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159390,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":160180,"byte_end":160183,"line_start":3261,"line_end":3261,"column_start":16,"column_end":19},"name":"new","qualname":"<Table>::new","value":"fn (table_descriptor: &Object) -> Result<Table, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":160650,"byte_end":160656,"line_start":3269,"line_end":3269,"column_start":16,"column_end":22},"name":"length","qualname":"<Table>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` prototype property of the `WebAssembly.Table` object\n returns the length of the table, i.e. the number of elements in the\n table.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":161055,"byte_end":161058,"line_start":3276,"line_end":3276,"column_start":16,"column_end":19},"name":"get","qualname":"<Table>::get","value":"fn (&self, index: u32) -> Result<Function, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `get()` prototype method of the `WebAssembly.Table()` object\n retrieves a function reference stored at a given index.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":161525,"byte_end":161529,"line_start":3284,"line_end":3284,"column_start":16,"column_end":20},"name":"grow","qualname":"<Table>::grow","value":"fn (&self, additional_capacity: u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` prototype method of the `WebAssembly.Table` object\n increases the size of the `Table` instance by a specified number of\n elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":161979,"byte_end":161982,"line_start":3291,"line_end":3291,"column_start":16,"column_end":19},"name":"set","qualname":"<Table>::set","value":"fn (&self, index: u32, function: &Function) -> Result<(), JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `set()` prototype method of the `WebAssembly.Table` object mutates a\n reference stored at a given index to a different value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":159376,"byte_end":159391,"line_start":3246,"line_end":3246,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3420},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162391,"byte_end":162397,"line_start":3300,"line_end":3300,"column_start":18,"column_end":24},"name":"Memory","qualname":"::WebAssembly::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":3421}],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162091,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162091,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162091,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162105,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":163004,"byte_end":163007,"line_start":3311,"line_end":3311,"column_start":16,"column_end":19},"name":"new","qualname":"<Memory>::new","value":"fn (descriptor: &Object) -> Result<Memory, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Memory()` constructor creates a new `Memory` object\n which is a resizable `ArrayBuffer` that holds the raw bytes of\n memory accessed by a WebAssembly `Instance`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162091,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162091,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":163387,"byte_end":163393,"line_start":3318,"line_end":3318,"column_start":16,"column_end":22},"name":"buffer","qualname":"<Memory>::buffer","value":"fn (&self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" An accessor property that returns the buffer contained in the\n memory.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162091,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162091,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":163958,"byte_end":163962,"line_start":3329,"line_end":3329,"column_start":16,"column_end":20},"name":"grow","qualname":"<Memory>::grow","value":"fn (&self, pages: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` protoype method of the `Memory` object increases the\n size of the memory instance by a specified number of WebAssembly\n pages.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162091,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":162091,"byte_end":162106,"line_start":3295,"line_end":3295,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164314,"byte_end":164318,"line_start":3338,"line_end":3338,"column_start":9,"column_end":13},"name":"JSON","qualname":"::JSON","value":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3437}],"decl_id":null,"docs":" The `JSON` object contains methods for parsing [JavaScript Object\n Notation (JSON)](https://json.org/) and converting values to JSON. It\n can't be called or constructed, and aside from its two method\n properties, it has no interesting functionality of its own.\n","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164281,"byte_end":164305,"line_start":3337,"line_end":3337,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3431},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164734,"byte_end":164739,"line_start":3349,"line_end":3349,"column_start":16,"column_end":21},"name":"parse","qualname":"::JSON::parse","value":"fn (text: &str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.parse()` method parses a JSON string, constructing the\n JavaScript value or object described by the string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164356,"byte_end":164371,"line_start":3342,"line_end":3342,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164356,"byte_end":164371,"line_start":3342,"line_end":3342,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3433},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":165078,"byte_end":165087,"line_start":3355,"line_end":3355,"column_start":16,"column_end":25},"name":"stringify","qualname":"::JSON::stringify","value":"fn (obj: &JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164356,"byte_end":164371,"line_start":3342,"line_end":3342,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164356,"byte_end":164371,"line_start":3342,"line_end":3342,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3435},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":165890,"byte_end":165913,"line_start":3367,"line_end":3367,"column_start":16,"column_end":39},"name":"stringify_with_replacer","qualname":"::JSON::stringify_with_replacer","value":"fn (obj: &JsValue, replacer: &JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164356,"byte_end":164371,"line_start":3342,"line_end":3342,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164356,"byte_end":164371,"line_start":3342,"line_end":3342,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167430,"byte_end":167463,"line_start":3391,"line_end":3391,"column_start":16,"column_end":49},"name":"stringify_with_replacer_and_space","qualname":"::JSON::stringify_with_replacer_and_space","value":"fn (obj: &JsValue, replacer: &JsValue, space: &JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164356,"byte_end":164371,"line_start":3342,"line_end":3342,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":164356,"byte_end":164371,"line_start":3342,"line_end":3342,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3678},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167782,"byte_end":167790,"line_start":3405,"line_end":3405,"column_start":14,"column_end":22},"name":"JsString","qualname":"::JsString","value":"JsString {  }","parent":null,"children":[{"krate":0,"index":3679}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167629,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":168095,"byte_end":168101,"line_start":3412,"line_end":3412,"column_start":12,"column_end":18},"name":"length","qualname":"<JsString>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of a String object indicates the length of a string,\n in UTF-16 code units.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":168512,"byte_end":168519,"line_start":3420,"line_end":3420,"column_start":12,"column_end":19},"name":"char_at","qualname":"<JsString>::char_at","value":"fn (&self, index: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The String object's `charAt()` method returns a new string consisting of\n the single UTF-16 code unit located at the specified offset into the\n string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":169346,"byte_end":169358,"line_start":3434,"line_end":3434,"column_start":12,"column_end":24},"name":"char_code_at","qualname":"<JsString>::char_code_at","value":"fn (&self, index: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `charCodeAt()` method returns an integer between 0 and 65535\n representing the UTF-16 code unit at the given index (the UTF-16 code\n unit matches the Unicode code point for code points representable in a\n single UTF-16 code unit, but might also be the first code unit of a\n surrogate pair for code points not representable in a single UTF-16 code\n unit, e.g. Unicode code points > 0x10000).  If you want the entire code\n point value, use `codePointAt()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":169729,"byte_end":169742,"line_start":3441,"line_end":3441,"column_start":12,"column_end":25},"name":"code_point_at","qualname":"<JsString>::code_point_at","value":"fn (&self, pos: u32) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `codePointAt()` method returns a non-negative integer that is the\n Unicode code point value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":170095,"byte_end":170101,"line_start":3448,"line_end":3448,"column_start":12,"column_end":18},"name":"concat","qualname":"<JsString>::concat","value":"fn (&self, string_2: &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `concat()` method concatenates the string arguments to the calling\n string and returns a new string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":170521,"byte_end":170530,"line_start":3455,"line_end":3455,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<JsString>::ends_with","value":"fn (&self, search_string: &str, length: i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The endsWith() method determines whether a string ends with the characters of a\n specified string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":171371,"byte_end":171385,"line_start":3471,"line_end":3471,"column_start":12,"column_end":26},"name":"from_char_code","qualname":"<JsString>::from_char_code","value":"fn (char_codes: &[u16]) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The static String.fromCharCode() method returns a string created from\n the specified sequence of UTF-16 code units.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":171655,"byte_end":171670,"line_start":3475,"line_end":3475,"column_start":12,"column_end":27},"name":"from_char_code1","qualname":"<JsString>::from_char_code1","value":"fn (a: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":171928,"byte_end":171943,"line_start":3479,"line_end":3479,"column_start":12,"column_end":27},"name":"from_char_code2","qualname":"<JsString>::from_char_code2","value":"fn (a: u32, b: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":172209,"byte_end":172224,"line_start":3483,"line_end":3483,"column_start":12,"column_end":27},"name":"from_char_code3","qualname":"<JsString>::from_char_code3","value":"fn (a: u32, b: u32, c: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":172498,"byte_end":172513,"line_start":3487,"line_end":3487,"column_start":12,"column_end":27},"name":"from_char_code4","qualname":"<JsString>::from_char_code4","value":"fn (a: u32, b: u32, c: u32, d: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":172795,"byte_end":172810,"line_start":3491,"line_end":3491,"column_start":12,"column_end":27},"name":"from_char_code5","qualname":"<JsString>::from_char_code5","value":"fn (a: u32, b: u32, c: u32, d: u32, e: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":173545,"byte_end":173560,"line_start":3507,"line_end":3507,"column_start":12,"column_end":27},"name":"from_code_point","qualname":"<JsString>::from_code_point","value":"fn (code_points: &[u32]) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static String.fromCodePoint() method returns a string created by\n using the specified sequence of code points.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":173857,"byte_end":173873,"line_start":3511,"line_end":3511,"column_start":12,"column_end":28},"name":"from_code_point1","qualname":"<JsString>::from_code_point1","value":"fn (a: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":174157,"byte_end":174173,"line_start":3515,"line_end":3515,"column_start":12,"column_end":28},"name":"from_code_point2","qualname":"<JsString>::from_code_point2","value":"fn (a: u32, b: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3544},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":174465,"byte_end":174481,"line_start":3519,"line_end":3519,"column_start":12,"column_end":28},"name":"from_code_point3","qualname":"<JsString>::from_code_point3","value":"fn (a: u32, b: u32, c: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3547},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":174781,"byte_end":174797,"line_start":3523,"line_end":3523,"column_start":12,"column_end":28},"name":"from_code_point4","qualname":"<JsString>::from_code_point4","value":"fn (a: u32, b: u32, c: u32, d: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":175105,"byte_end":175121,"line_start":3527,"line_end":3527,"column_start":12,"column_end":28},"name":"from_code_point5","qualname":"<JsString>::from_code_point5","value":"fn (a: u32, b: u32, c: u32, d: u32, e: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3553},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":175533,"byte_end":175541,"line_start":3534,"line_end":3534,"column_start":12,"column_end":20},"name":"includes","qualname":"<JsString>::includes","value":"fn (&self, search_string: &str, position: i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `includes()` method determines whether one string may be found\n within another string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":176036,"byte_end":176044,"line_start":3542,"line_end":3542,"column_start":12,"column_end":20},"name":"index_of","qualname":"<JsString>::index_of","value":"fn (&self, search_value: &str, from_index: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `indexOf()` method returns the index within the calling String\n object of the first occurrence of the specified value, starting the\n search at fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":176552,"byte_end":176565,"line_start":3550,"line_end":3550,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<JsString>::last_index_of","value":"fn (&self, search_value: &str, from_index: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `lastIndexOf()` method returns the index within the calling String\n object of the last occurrence of the specified value, searching\n backwards from fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3562},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":177031,"byte_end":177045,"line_start":3558,"line_end":3558,"column_start":12,"column_end":26},"name":"locale_compare","qualname":"<JsString>::locale_compare","value":"fn (&self, compare_string: &str, locales: &Array, options: &Object) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The localeCompare() method returns a number indicating whether\n a reference string comes before or after or is the same as\n the given string in sort order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3565},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":177478,"byte_end":177484,"line_start":3569,"line_end":3569,"column_start":12,"column_end":18},"name":"match_","qualname":"<JsString>::match_","value":"fn (&self, pattern: &RegExp) -> Option<Object>","parent":null,"children":[],"decl_id":null,"docs":" The match() method retrieves the matches when matching a string against a regular expression.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":177897,"byte_end":177906,"line_start":3576,"line_end":3576,"column_start":12,"column_end":21},"name":"normalize","qualname":"<JsString>::normalize","value":"fn (&self, form: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The normalize() method returns the Unicode Normalization Form\n of a given string (if the value isn't a string, it will be converted to one first).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3571},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":178400,"byte_end":178407,"line_start":3585,"line_end":3585,"column_start":12,"column_end":19},"name":"pad_end","qualname":"<JsString>::pad_end","value":"fn (&self, target_length: u32, pad_string: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padEnd()` method pads the current string with a given string\n (repeated, if needed) so that the resulting string reaches a given\n length. The padding is applied from the end (right) of the current\n string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":178936,"byte_end":178945,"line_start":3594,"line_end":3594,"column_start":12,"column_end":21},"name":"pad_start","qualname":"<JsString>::pad_start","value":"fn (&self, target_length: u32, pad_string: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padStart()` method pads the current string with another string\n (repeated, if needed) so that the resulting string reaches the given\n length. The padding is applied from the start (left) of the current\n string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":179386,"byte_end":179392,"line_start":3601,"line_end":3601,"column_start":12,"column_end":18},"name":"repeat","qualname":"<JsString>::repeat","value":"fn (&self, count: i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The repeat() method constructs and returns a new string which contains the specified\n number of copies of the string on which it was called, concatenated together.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":179945,"byte_end":179952,"line_start":3611,"line_end":3611,"column_start":12,"column_end":19},"name":"replace","qualname":"<JsString>::replace","value":"fn (&self, pattern: &str, replacement: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The replace() method returns a new string with some or all matches of a pattern\n replaced by a replacement. The pattern can be a string or a RegExp, and\n the replacement can be a string or a function to be called for each match.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":180222,"byte_end":180243,"line_start":3615,"line_end":3615,"column_start":12,"column_end":33},"name":"replace_with_function","qualname":"<JsString>::replace_with_function","value":"fn (&self, pattern: &str, replacement: &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":180424,"byte_end":180442,"line_start":3622,"line_end":3622,"column_start":12,"column_end":30},"name":"replace_by_pattern","qualname":"<JsString>::replace_by_pattern","value":"fn (&self, pattern: &RegExp, replacement: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3589},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":180715,"byte_end":180747,"line_start":3626,"line_end":3626,"column_start":12,"column_end":44},"name":"replace_by_pattern_with_function","qualname":"<JsString>::replace_by_pattern_with_function","value":"fn (&self, pattern: &RegExp, replacement: &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":181163,"byte_end":181169,"line_start":3637,"line_end":3637,"column_start":12,"column_end":18},"name":"search","qualname":"<JsString>::search","value":"fn (&self, pattern: &RegExp) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The search() method executes a search for a match between\n a regular expression and this String object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":181544,"byte_end":181549,"line_start":3644,"line_end":3644,"column_start":12,"column_end":17},"name":"slice","qualname":"<JsString>::slice","value":"fn (&self, start: u32, end: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method extracts a section of a string and returns it as a\n new string, without modifying the original string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":181993,"byte_end":181998,"line_start":3651,"line_end":3651,"column_start":12,"column_end":17},"name":"split","qualname":"<JsString>::split","value":"fn (&self, separator: &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The split() method splits a String object into an array of strings by separating the string\n into substrings, using a specified separator string to determine where to make each split.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":182244,"byte_end":182255,"line_start":3655,"line_end":3655,"column_start":12,"column_end":23},"name":"split_limit","qualname":"<JsString>::split_limit","value":"fn (&self, separator: &str, limit: u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":182513,"byte_end":182529,"line_start":3659,"line_end":3659,"column_start":12,"column_end":28},"name":"split_by_pattern","qualname":"<JsString>::split_by_pattern","value":"fn (&self, pattern: &RegExp) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":182776,"byte_end":182798,"line_start":3663,"line_end":3663,"column_start":12,"column_end":34},"name":"split_by_pattern_limit","qualname":"<JsString>::split_by_pattern_limit","value":"fn (&self, pattern: &RegExp, limit: u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":183243,"byte_end":183254,"line_start":3671,"line_end":3671,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<JsString>::starts_with","value":"fn (&self, search_string: &str, position: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `startsWith()` method determines whether a string begins with the\n characters of a specified string, returning true or false as\n appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":183649,"byte_end":183658,"line_start":3678,"line_end":3678,"column_start":12,"column_end":21},"name":"substring","qualname":"<JsString>::substring","value":"fn (&self, index_start: u32, index_end: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substring()` method returns the part of the string between the\n start and end indexes, or to the end of the string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":184044,"byte_end":184050,"line_start":3685,"line_end":3685,"column_start":12,"column_end":18},"name":"substr","qualname":"<JsString>::substr","value":"fn (&self, start: i32, length: i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substr()` method returns the part of a string between\n the start index and a number of characters after it.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":184492,"byte_end":184512,"line_start":3692,"line_end":3692,"column_start":12,"column_end":32},"name":"to_locale_lower_case","qualname":"<JsString>::to_locale_lower_case","value":"fn (&self, locale: Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleLowerCase() method returns the calling string value converted to lower case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":184948,"byte_end":184968,"line_start":3699,"line_end":3699,"column_start":12,"column_end":32},"name":"to_locale_upper_case","qualname":"<JsString>::to_locale_upper_case","value":"fn (&self, locale: Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleUpperCase() method returns the calling string value converted to upper case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":185343,"byte_end":185356,"line_start":3706,"line_end":3706,"column_start":12,"column_end":25},"name":"to_lower_case","qualname":"<JsString>::to_lower_case","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLowerCase()` method returns the calling string value\n converted to lower case.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":185694,"byte_end":185703,"line_start":3713,"line_end":3713,"column_start":12,"column_end":21},"name":"to_string","qualname":"<JsString>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":186113,"byte_end":186126,"line_start":3720,"line_end":3720,"column_start":12,"column_end":25},"name":"to_upper_case","qualname":"<JsString>::to_upper_case","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toUpperCase()` method returns the calling string value converted to\n uppercase (the value will be converted to a string if it isn't one).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":186597,"byte_end":186601,"line_start":3729,"line_end":3729,"column_start":12,"column_end":16},"name":"trim","qualname":"<JsString>::trim","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trim()` method removes whitespace from both ends of a string.\n Whitespace in this context is all the whitespace characters (space, tab,\n no-break space, etc.) and all the line terminator characters (LF, CR,\n etc.).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":186971,"byte_end":186979,"line_start":3736,"line_end":3736,"column_start":12,"column_end":20},"name":"trim_end","qualname":"<JsString>::trim_end","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":187351,"byte_end":187361,"line_start":3743,"line_end":3743,"column_start":12,"column_end":22},"name":"trim_right","qualname":"<JsString>::trim_right","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":187743,"byte_end":187753,"line_start":3750,"line_end":3750,"column_start":12,"column_end":22},"name":"trim_start","qualname":"<JsString>::trim_start","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string.  `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":188134,"byte_end":188143,"line_start":3757,"line_end":3757,"column_start":12,"column_end":21},"name":"trim_left","qualname":"<JsString>::trim_left","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string.  `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":188468,"byte_end":188476,"line_start":3763,"line_end":3763,"column_start":12,"column_end":20},"name":"value_of","qualname":"<JsString>::value_of","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `String` object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":188898,"byte_end":188901,"line_start":3770,"line_end":3770,"column_start":12,"column_end":15},"name":"raw","qualname":"<JsString>::raw","value":"fn (call_site: &Object, substitutions: &Array) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":189371,"byte_end":189376,"line_start":3777,"line_end":3777,"column_start":12,"column_end":17},"name":"raw_0","qualname":"<JsString>::raw_0","value":"fn (call_site: &Object) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":189823,"byte_end":189828,"line_start":3784,"line_end":3784,"column_start":12,"column_end":17},"name":"raw_1","qualname":"<JsString>::raw_1","value":"fn (call_site: &Object, substitutions_1: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":190298,"byte_end":190303,"line_start":3791,"line_end":3791,"column_start":12,"column_end":17},"name":"raw_2","qualname":"<JsString>::raw_2","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":190827,"byte_end":190832,"line_start":3802,"line_end":3802,"column_start":12,"column_end":17},"name":"raw_3","qualname":"<JsString>::raw_3","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3667},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":191387,"byte_end":191392,"line_start":3814,"line_end":3814,"column_start":12,"column_end":17},"name":"raw_4","qualname":"<JsString>::raw_4","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str, substitutions_4: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":191978,"byte_end":191983,"line_start":3827,"line_end":3827,"column_start":12,"column_end":17},"name":"raw_5","qualname":"<JsString>::raw_5","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str, substitutions_4: &str, substitutions_5: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":192600,"byte_end":192605,"line_start":3841,"line_end":3841,"column_start":12,"column_end":17},"name":"raw_6","qualname":"<JsString>::raw_6","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str, substitutions_4: &str, substitutions_5: &str, substitutions_6: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":193253,"byte_end":193258,"line_start":3856,"line_end":3856,"column_start":12,"column_end":17},"name":"raw_7","qualname":"<JsString>::raw_7","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str, substitutions_4: &str, substitutions_5: &str, substitutions_6: &str, substitutions_7: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":167615,"byte_end":167630,"line_start":3401,"line_end":3401,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":193851,"byte_end":193859,"line_start":3875,"line_end":3875,"column_start":12,"column_end":20},"name":"try_from","qualname":"<JsString>::try_from","value":"fn (val: &JsValue) -> Option<&JsString>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `JsString` value of this JS value if it's an instance of a\n string.","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":193757,"byte_end":193839,"line_start":3874,"line_end":3874,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":194784,"byte_end":194798,"line_start":3895,"line_end":3895,"column_start":12,"column_end":26},"name":"is_valid_utf16","qualname":"<JsString>::is_valid_utf16","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this string is a valid UTF-16 string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":195136,"byte_end":195140,"line_start":3904,"line_end":3904,"column_start":12,"column_end":16},"name":"iter","qualname":"<JsString>::iter","value":"fn <'a> (&'a self) -> impl ExactSizeIterator<Item = u16> + DoubleEndedIterator<Item = u16> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `u16` character codes that make up this JS\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":195909,"byte_end":195916,"line_start":3920,"line_end":3920,"column_start":12,"column_end":19},"name":"as_char","qualname":"<JsString>::as_char","value":"fn (&self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" If this string consists of a single Unicode code point, then this method\n converts it into a Rust `char` without doing any allocations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3785},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197850,"byte_end":197856,"line_start":4007,"line_end":4007,"column_start":14,"column_end":20},"name":"Symbol","qualname":"::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":3786}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":198318,"byte_end":198330,"line_start":4015,"line_end":4015,"column_start":12,"column_end":24},"name":"has_instance","qualname":"<Symbol>::has_instance","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.hasInstance` well-known symbol is used to determine\n if a constructor object recognizes an object as its instance.\n The `instanceof` operator's behavior can be customized by this symbol.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":198797,"byte_end":198817,"line_start":4023,"line_end":4023,"column_start":12,"column_end":32},"name":"is_concat_spreadable","qualname":"<Symbol>::is_concat_spreadable","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.isConcatSpreadable` well-known symbol is used to configure\n if an object should be flattened to its array elements when using the\n `Array.prototype.concat()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":199167,"byte_end":199175,"line_start":4030,"line_end":4030,"column_start":12,"column_end":20},"name":"iterator","qualname":"<Symbol>::iterator","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.iterator` well-known symbol specifies the default iterator\n for an object.  Used by `for...of`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":199608,"byte_end":199614,"line_start":4038,"line_end":4038,"column_start":12,"column_end":18},"name":"match_","qualname":"<Symbol>::match_","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.match` well-known symbol specifies the matching of a regular\n expression against a string. This function is called by the\n `String.prototype.match()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":200155,"byte_end":200162,"line_start":4049,"line_end":4049,"column_start":12,"column_end":19},"name":"replace","qualname":"<Symbol>::replace","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.replace` well-known symbol specifies the method that\n replaces matched substrings of a string.  This function is called by the\n `String.prototype.replace()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":200728,"byte_end":200734,"line_start":4060,"line_end":4060,"column_start":12,"column_end":18},"name":"search","qualname":"<Symbol>::search","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.search` well-known symbol specifies the method that returns\n the index within a string that matches the regular expression.  This\n function is called by the `String.prototype.search()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":201114,"byte_end":201121,"line_start":4067,"line_end":4067,"column_start":12,"column_end":19},"name":"species","qualname":"<Symbol>::species","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The well-known symbol `Symbol.species` specifies a function-valued\n property that the constructor function uses to create derived objects.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":201667,"byte_end":201672,"line_start":4077,"line_end":4077,"column_start":12,"column_end":17},"name":"split","qualname":"<Symbol>::split","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.split` well-known symbol specifies the method that splits a\n string at the indices that match a regular expression.  This function is\n called by the `String.prototype.split()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":202100,"byte_end":202112,"line_start":4085,"line_end":4085,"column_start":12,"column_end":24},"name":"to_primitive","qualname":"<Symbol>::to_primitive","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toPrimitive` is a symbol that specifies a function valued\n property that is called to convert an object to a corresponding\n primitive value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":202614,"byte_end":202627,"line_start":4094,"line_end":4094,"column_start":12,"column_end":25},"name":"to_string_tag","qualname":"<Symbol>::to_string_tag","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toStringTag` well-known symbol is a string valued property\n that is used in the creation of the default string description of an\n object.  It is accessed internally by the `Object.prototype.toString()`\n method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":203084,"byte_end":203088,"line_start":4102,"line_end":4102,"column_start":12,"column_end":16},"name":"for_","qualname":"<Symbol>::for_","value":"fn (key: &str) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The Symbol.for(key) method searches for existing symbols in a runtime-wide symbol registry with\n the given key and returns it if found.\n Otherwise a new symbol gets created in the global symbol registry with this key.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":203442,"byte_end":203449,"line_start":4108,"line_end":4108,"column_start":12,"column_end":19},"name":"key_for","qualname":"<Symbol>::key_for","value":"fn (sym: &Symbol) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The Symbol.keyFor(sym) method retrieves a shared symbol key from the global symbol registry for the given symbol.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":203759,"byte_end":203768,"line_start":4114,"line_end":4114,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Symbol>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the specified Symbol object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":204229,"byte_end":204240,"line_start":4122,"line_end":4122,"column_start":12,"column_end":23},"name":"unscopables","qualname":"<Symbol>::unscopables","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The Symbol.unscopables well-known symbol is used to specify an object\n value of whose own and inherited property names are excluded from the\n with environment bindings of the associated object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":204523,"byte_end":204531,"line_start":4128,"line_end":4128,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Symbol>::value_of","value":"fn (&self) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The valueOf() method returns the primitive value of a Symbol object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197727,"byte_end":197742,"line_start":4003,"line_end":4003,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":204594,"byte_end":204598,"line_start":4132,"line_end":4132,"column_start":9,"column_end":13},"name":"Intl","qualname":"::Intl","value":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":3791},{"krate":0,"index":3863},{"krate":0,"index":3867},{"krate":0,"index":3865},{"krate":0,"index":3793},{"krate":0,"index":3845},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3854},{"krate":0,"index":3857},{"krate":0,"index":3860},{"krate":0,"index":3942},{"krate":0,"index":3946},{"krate":0,"index":3944},{"krate":0,"index":3869},{"krate":0,"index":3921},{"krate":0,"index":3924},{"krate":0,"index":3927},{"krate":0,"index":3930},{"krate":0,"index":3933},{"krate":0,"index":3936},{"krate":0,"index":3939},{"krate":0,"index":4021},{"krate":0,"index":4025},{"krate":0,"index":4023},{"krate":0,"index":3948},{"krate":0,"index":4000},{"krate":0,"index":4003},{"krate":0,"index":4006},{"krate":0,"index":4009},{"krate":0,"index":4012},{"krate":0,"index":4015},{"krate":0,"index":4018},{"krate":0,"index":4097},{"krate":0,"index":4101},{"krate":0,"index":4099},{"krate":0,"index":4027},{"krate":0,"index":4079},{"krate":0,"index":4082},{"krate":0,"index":4085},{"krate":0,"index":4088},{"krate":0,"index":4091},{"krate":0,"index":4094}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":204561,"byte_end":204585,"line_start":4131,"line_end":4131,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3791},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205138,"byte_end":205159,"line_start":4144,"line_end":4144,"column_start":16,"column_end":37},"name":"get_canonical_locales","qualname":"::Intl::get_canonical_locales","value":"fn (s: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.getCanonicalLocales()` method returns an array containing\n the canonical locale names. Duplicates will be omitted and elements\n will be validated as structurally valid language tags.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":204636,"byte_end":204651,"line_start":4136,"line_end":4136,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":204636,"byte_end":204651,"line_start":4136,"line_end":4136,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3863},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205634,"byte_end":205642,"line_start":4156,"line_end":4156,"column_start":18,"column_end":26},"name":"Collator","qualname":"::Intl::Collator","value":"Collator {  }","parent":null,"children":[{"krate":0,"index":3864}],"decl_id":null,"docs":" The Intl.Collator object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205992,"byte_end":205995,"line_start":4163,"line_end":4163,"column_start":16,"column_end":19},"name":"new","qualname":"<Collator>::new","value":"fn (locales: &Array, options: &Object) -> Collator","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3855},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":206450,"byte_end":206457,"line_start":4171,"line_end":4171,"column_start":16,"column_end":23},"name":"compare","qualname":"<Collator>::compare","value":"fn (&self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator.prototype.compare property returns a function that\n compares two strings according to the sort order of this Collator\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":206961,"byte_end":206977,"line_start":4179,"line_end":4179,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<Collator>::resolved_options","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator.prototype.resolvedOptions() method returns a new\n object with properties reflecting the locale and collation options\n computed during initialization of this Collator object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3861},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207525,"byte_end":207545,"line_start":4188,"line_end":4188,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<Collator>::supported_locales_of","value":"fn (locales: &Array, options: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator.supportedLocalesOf() method returns an array\n containing those of the provided locales that are supported in\n collation without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":205215,"byte_end":205230,"line_start":4148,"line_end":4148,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3942},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":208056,"byte_end":208070,"line_start":4200,"line_end":4200,"column_start":18,"column_end":32},"name":"DateTimeFormat","qualname":"::Intl::DateTimeFormat","value":"DateTimeFormat {  }","parent":null,"children":[{"krate":0,"index":3943}],"decl_id":null,"docs":" The Intl.DateTimeFormat object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3928},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":208428,"byte_end":208431,"line_start":4207,"line_end":4207,"column_start":16,"column_end":19},"name":"new","qualname":"<DateTimeFormat>::new","value":"fn (locales: &Array, options: &Object) -> DateTimeFormat","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":208939,"byte_end":208945,"line_start":4215,"line_end":4215,"column_start":16,"column_end":22},"name":"format","qualname":"<DateTimeFormat>::format","value":"fn (&self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.prototype.format property returns a getter function that\n formats a date according to the locale and formatting options of this\n Intl.DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3934},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":209406,"byte_end":209421,"line_start":4222,"line_end":4222,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<DateTimeFormat>::format_to_parts","value":"fn (&self, date: &Date) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.prototype.formatToParts() method allows locale-aware\n formatting of strings produced by DateTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3937},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":209974,"byte_end":209990,"line_start":4230,"line_end":4230,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<DateTimeFormat>::resolved_options","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.prototype.resolvedOptions() method returns a new\n object with properties reflecting the locale and date and time formatting\n options computed during initialization of this DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210577,"byte_end":210597,"line_start":4239,"line_end":4239,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<DateTimeFormat>::supported_locales_of","value":"fn (locales: &Array, options: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.supportedLocalesOf() method returns an array\n containing those of the provided locales that are supported in date\n and time formatting without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":207629,"byte_end":207644,"line_start":4192,"line_end":4192,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4021},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":211095,"byte_end":211107,"line_start":4251,"line_end":4251,"column_start":18,"column_end":30},"name":"NumberFormat","qualname":"::Intl::NumberFormat","value":"NumberFormat {  }","parent":null,"children":[{"krate":0,"index":4022}],"decl_id":null,"docs":" The Intl.NumberFormat object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":211454,"byte_end":211457,"line_start":4258,"line_end":4258,"column_start":16,"column_end":19},"name":"new","qualname":"<NumberFormat>::new","value":"fn (locales: &Array, options: &Object) -> NumberFormat","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4010},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":211952,"byte_end":211958,"line_start":4266,"line_end":4266,"column_start":16,"column_end":22},"name":"format","qualname":"<NumberFormat>::format","value":"fn (&self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat.prototype.format property returns a getter function that\n formats a number according to the locale and formatting options of this\n NumberFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4013},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":212413,"byte_end":212428,"line_start":4273,"line_end":4273,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<NumberFormat>::format_to_parts","value":"fn (&self, number: f64) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Numberformat.prototype.formatToParts() method allows locale-aware\n formatting of strings produced by NumberTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":212966,"byte_end":212982,"line_start":4281,"line_end":4281,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<NumberFormat>::resolved_options","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat.prototype.resolvedOptions() method returns a new\n object with properties reflecting the locale and number formatting\n options computed during initialization of this NumberFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4019},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213542,"byte_end":213562,"line_start":4289,"line_end":4289,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<NumberFormat>::supported_locales_of","value":"fn (locales: &Array, options: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat.supportedLocalesOf() method returns an array\n containing those of the provided locales that are supported in number\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":210679,"byte_end":210694,"line_start":4243,"line_end":4243,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4097},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":214074,"byte_end":214085,"line_start":4301,"line_end":4301,"column_start":18,"column_end":29},"name":"PluralRules","qualname":"::Intl::PluralRules","value":"PluralRules {  }","parent":null,"children":[{"krate":0,"index":4098}],"decl_id":null,"docs":" The Intl.PluralRules object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4086},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":214447,"byte_end":214450,"line_start":4308,"line_end":4308,"column_start":16,"column_end":19},"name":"new","qualname":"<PluralRules>::new","value":"fn (locales: &Array, options: &Object) -> PluralRules","parent":null,"children":[],"decl_id":null,"docs":" The Intl.PluralRules object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4089},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":214992,"byte_end":215008,"line_start":4316,"line_end":4316,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<PluralRules>::resolved_options","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Intl.PluralRules.prototype.resolvedOptions() method returns a new\n object with properties reflecting the locale and plural formatting\n options computed during initialization of this PluralRules object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4092},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":215405,"byte_end":215411,"line_start":4323,"line_end":4323,"column_start":16,"column_end":22},"name":"select","qualname":"<PluralRules>::select","value":"fn (&self, number: f64) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The Intl.PluralRules.prototype.select method returns a String indicating\n which plural rule to use for locale-aware formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4095},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":215982,"byte_end":216002,"line_start":4331,"line_end":4331,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<PluralRules>::supported_locales_of","value":"fn (locales: &Array, options: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.PluralRules.supportedLocalesOf() method returns an array\n containing those of the provided locales that are supported in plural\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":213643,"byte_end":213658,"line_start":4293,"line_end":4293,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4188},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216442,"byte_end":216449,"line_start":4344,"line_end":4344,"column_start":14,"column_end":21},"name":"Promise","qualname":"::Promise","value":"Promise {  }","parent":null,"children":[{"krate":0,"index":4189}],"decl_id":null,"docs":" The `Promise` object represents the eventual completion (or failure) of\n an asynchronous operation, and its resulting value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":217479,"byte_end":217482,"line_start":4363,"line_end":4363,"column_start":12,"column_end":15},"name":"new","qualname":"<Promise>::new","value":"fn (cb: &mut dyn FnMut(Function, Function)) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Promise` with the provided executor `cb`","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4165},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":218011,"byte_end":218014,"line_start":4372,"line_end":4372,"column_start":12,"column_end":15},"name":"all","qualname":"<Promise>::all","value":"fn (obj: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.all(iterable)` method returns a single `Promise` that\n resolves when all of the promises in the iterable argument have resolved\n or when the iterable argument contains no promises. It rejects with the\n reason of the first promise that rejects.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4168},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":218448,"byte_end":218452,"line_start":4380,"line_end":4380,"column_start":12,"column_end":16},"name":"race","qualname":"<Promise>::race","value":"fn (obj: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.race(iterable)` method returns a promise that resolves or\n rejects as soon as one of the promises in the iterable resolves or\n rejects, with the value or reason from that promise.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":218792,"byte_end":218798,"line_start":4387,"line_end":4387,"column_start":12,"column_end":18},"name":"reject","qualname":"<Promise>::reject","value":"fn (obj: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.reject(reason)` method returns a `Promise` object that is\n rejected with the given reason.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4174},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":219414,"byte_end":219421,"line_start":4397,"line_end":4397,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Promise>::resolve","value":"fn (obj: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.resolve(value)` method returns a `Promise` object that is\n resolved with the given value. If the value is a promise, that promise\n is returned; if the value is a thenable (i.e. has a \"then\" method), the\n returned promise will \"follow\" that thenable, adopting its eventual\n state; otherwise the returned promise will be fulfilled with the value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4177},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":219905,"byte_end":219910,"line_start":4406,"line_end":4406,"column_start":12,"column_end":17},"name":"catch","qualname":"<Promise>::catch","value":"fn (&self, cb: &Closure<dyn FnMut(JsValue)>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `catch()` method returns a `Promise` and deals with rejected cases\n only.  It behaves the same as calling `Promise.prototype.then(undefined,\n onRejected)` (in fact, calling `obj.catch(onRejected)` internally calls\n `obj.then(undefined, onRejected)`).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4180},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":220302,"byte_end":220306,"line_start":4413,"line_end":4413,"column_start":12,"column_end":16},"name":"then","qualname":"<Promise>::then","value":"fn (&self, cb: &Closure<dyn FnMut(JsValue)>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `then()` method returns a `Promise`. It takes up to two arguments:\n callback functions for the success and failure cases of the `Promise`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4183},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":220484,"byte_end":220489,"line_start":4417,"line_end":4417,"column_start":12,"column_end":17},"name":"then2","qualname":"<Promise>::then2","value":"fn (&self, resolve: &Closure<dyn FnMut(JsValue)>, reject: &Closure<dyn FnMut(JsValue)>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Same as `then`, only with both arguments provided.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":221265,"byte_end":221272,"line_start":4434,"line_end":4434,"column_start":12,"column_end":19},"name":"finally","qualname":"<Promise>::finally","value":"fn (&self, cb: &Closure<dyn FnMut()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `finally()` method returns a `Promise`. When the promise is settled,\n whether fulfilled or rejected, the specified callback function is\n executed. This provides a way for code that must be executed once the\n `Promise` has been dealt with to be run whether the promise was\n fulfilled successfully or rejected.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":216068,"byte_end":216083,"line_start":4336,"line_end":4336,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":221496,"byte_end":221502,"line_start":4441,"line_end":4441,"column_start":8,"column_end":14},"name":"global","qualname":"::global","value":"fn () -> Object","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the global scope object.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4415},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"Int8Array","qualname":"::Int8Array","value":"Int8Array {  }","parent":null,"children":[{"krate":0,"index":4416}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4377},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new","qualname":"<Int8Array>::new","value":"fn (constructor_arg: &JsValue) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Int8Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4380},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Int8Array>::new_with_length","value":"fn (length: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int8Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Int8Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int8Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4386},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Int8Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int8Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4389},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"fill","qualname":"<Int8Array>::fill","value":"fn (&self, value: i8, start: u32, end: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4392},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Int8Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4395},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Int8Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4398},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"slice","qualname":"<Int8Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4401},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Int8Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(i8, u32, Int8Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4404},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"length","qualname":"<Int8Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4407},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Int8Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4410},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Int8Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"set","qualname":"<Int8Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4518},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"Int16Array","qualname":"::Int16Array","value":"Int16Array {  }","parent":null,"children":[{"krate":0,"index":4519}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4480},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new","qualname":"<Int16Array>::new","value":"fn (constructor_arg: &JsValue) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Int16Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4483},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Int16Array>::new_with_length","value":"fn (length: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int16Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4486},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Int16Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int16Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Int16Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int16Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"fill","qualname":"<Int16Array>::fill","value":"fn (&self, value: i16, start: u32, end: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4495},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Int16Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4498},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Int16Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4501},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"slice","qualname":"<Int16Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4504},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Int16Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(i16, u32, Int16Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"length","qualname":"<Int16Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4510},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Int16Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4513},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Int16Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4516},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"set","qualname":"<Int16Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4621},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"Int32Array","qualname":"::Int32Array","value":"Int32Array {  }","parent":null,"children":[{"krate":0,"index":4622}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4583},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new","qualname":"<Int32Array>::new","value":"fn (constructor_arg: &JsValue) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Int32Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4586},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Int32Array>::new_with_length","value":"fn (length: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int32Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4589},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Int32Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4592},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Int32Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4595},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"fill","qualname":"<Int32Array>::fill","value":"fn (&self, value: i32, start: u32, end: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4598},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Int32Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4601},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Int32Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4604},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"slice","qualname":"<Int32Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4607},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Int32Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(i32, u32, Int32Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4610},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"length","qualname":"<Int32Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4613},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Int32Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4616},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Int32Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4619},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"set","qualname":"<Int32Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4724},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"Uint8Array","qualname":"::Uint8Array","value":"Uint8Array {  }","parent":null,"children":[{"krate":0,"index":4725}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4686},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new","qualname":"<Uint8Array>::new","value":"fn (constructor_arg: &JsValue) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Uint8Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4689},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Uint8Array>::new_with_length","value":"fn (length: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4692},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Uint8Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4695},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Uint8Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4698},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"fill","qualname":"<Uint8Array>::fill","value":"fn (&self, value: u8, start: u32, end: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4701},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Uint8Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4704},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Uint8Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4707},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"slice","qualname":"<Uint8Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4710},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Uint8Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(u8, u32, Uint8Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4713},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"length","qualname":"<Uint8Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4716},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Uint8Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4719},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Uint8Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"set","qualname":"<Uint8Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4827},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"Uint8ClampedArray","qualname":"::Uint8ClampedArray","value":"Uint8ClampedArray {  }","parent":null,"children":[{"krate":0,"index":4828}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4789},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new","qualname":"<Uint8ClampedArray>::new","value":"fn (constructor_arg: &JsValue) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" The\n `Uint8ClampedArray()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4792},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Uint8ClampedArray>::new_with_length","value":"fn (length: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8ClampedArray()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4795},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Uint8ClampedArray>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8ClampedArray()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4798},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Uint8ClampedArray>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8ClampedArray()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4801},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"fill","qualname":"<Uint8ClampedArray>::fill","value":"fn (&self, value: u8, start: u32, end: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Uint8ClampedArray>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4807},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Uint8ClampedArray>::subarray","value":"fn (&self, begin: u32, end: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4810},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"slice","qualname":"<Uint8ClampedArray>::slice","value":"fn (&self, begin: u32, end: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4813},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Uint8ClampedArray>::for_each","value":"fn (&self, callback: &mut dyn FnMut(u8, u32, Uint8ClampedArray)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4816},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"length","qualname":"<Uint8ClampedArray>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4819},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Uint8ClampedArray>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4822},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Uint8ClampedArray>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4825},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"set","qualname":"<Uint8ClampedArray>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4930},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"Uint16Array","qualname":"::Uint16Array","value":"Uint16Array {  }","parent":null,"children":[{"krate":0,"index":4931}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4892},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new","qualname":"<Uint16Array>::new","value":"fn (constructor_arg: &JsValue) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Uint16Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4895},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Uint16Array>::new_with_length","value":"fn (length: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint16Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4898},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Uint16Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint16Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4901},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Uint16Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint16Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4904},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"fill","qualname":"<Uint16Array>::fill","value":"fn (&self, value: u16, start: u32, end: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4907},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Uint16Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4910},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Uint16Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4913},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"slice","qualname":"<Uint16Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4916},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Uint16Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(u16, u32, Uint16Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4919},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"length","qualname":"<Uint16Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4922},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Uint16Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4925},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Uint16Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4928},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"set","qualname":"<Uint16Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5033},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"Uint32Array","qualname":"::Uint32Array","value":"Uint32Array {  }","parent":null,"children":[{"krate":0,"index":5034}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4995},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new","qualname":"<Uint32Array>::new","value":"fn (constructor_arg: &JsValue) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Uint32Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4998},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Uint32Array>::new_with_length","value":"fn (length: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint32Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5001},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Uint32Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5004},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Uint32Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5007},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"fill","qualname":"<Uint32Array>::fill","value":"fn (&self, value: u32, start: u32, end: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5010},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Uint32Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5013},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Uint32Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5016},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"slice","qualname":"<Uint32Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5019},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Uint32Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(u32, u32, Uint32Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5022},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"length","qualname":"<Uint32Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5025},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Uint32Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5028},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Uint32Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5031},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"set","qualname":"<Uint32Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5136},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"Float32Array","qualname":"::Float32Array","value":"Float32Array {  }","parent":null,"children":[{"krate":0,"index":5137}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5098},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new","qualname":"<Float32Array>::new","value":"fn (constructor_arg: &JsValue) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Float32Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5101},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Float32Array>::new_with_length","value":"fn (length: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float32Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5104},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Float32Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5107},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Float32Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5110},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"fill","qualname":"<Float32Array>::fill","value":"fn (&self, value: f32, start: u32, end: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5113},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Float32Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5116},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Float32Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5119},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"slice","qualname":"<Float32Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5122},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Float32Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(f32, u32, Float32Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5125},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"length","qualname":"<Float32Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5128},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Float32Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5131},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Float32Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5134},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"set","qualname":"<Float32Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5239},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"Float64Array","qualname":"::Float64Array","value":"Float64Array {  }","parent":null,"children":[{"krate":0,"index":5240}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new","qualname":"<Float64Array>::new","value":"fn (constructor_arg: &JsValue) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Float64Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5204},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Float64Array>::new_with_length","value":"fn (length: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float64Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5207},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Float64Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float64Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5210},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Float64Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float64Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5213},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"fill","qualname":"<Float64Array>::fill","value":"fn (&self, value: f64, start: u32, end: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5216},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Float64Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5219},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Float64Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"slice","qualname":"<Float64Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5225},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Float64Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(f64, u32, Float64Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5228},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"length","qualname":"<Float64Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Float64Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5234},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Float64Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5237},"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24},"name":"set","qualname":"<Float64Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":224759,"byte_end":224774,"line_start":4518,"line_end":4518,"column_start":9,"column_end":24}}]}],"impls":[{"id":103,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35296,"byte_end":35303,"line_start":686,"line_end":686,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35549,"byte_end":35556,"line_start":700,"line_end":700,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35677,"byte_end":35684,"line_start":707,"line_end":707,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58428,"byte_end":58436,"line_start":1137,"line_end":1137,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":64797,"byte_end":64805,"line_start":1284,"line_end":1284,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":65956,"byte_end":65960,"line_start":1336,"line_end":1336,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":66121,"byte_end":66129,"line_start":1344,"line_end":1344,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":66368,"byte_end":66376,"line_start":1356,"line_end":1356,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":66517,"byte_end":66526,"line_start":1364,"line_end":1364,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":86952,"byte_end":86958,"line_start":1808,"line_end":1808,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119234,"byte_end":119240,"line_start":2404,"line_end":2404,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119631,"byte_end":119637,"line_start":2419,"line_end":2419,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119768,"byte_end":119774,"line_start":2426,"line_end":2426,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Inherent","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":193549,"byte_end":193557,"line_start":3868,"line_end":3868,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196425,"byte_end":196433,"line_start":3941,"line_end":3941,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196553,"byte_end":196561,"line_start":3947,"line_end":3947,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196698,"byte_end":196706,"line_start":3953,"line_end":3953,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196850,"byte_end":196858,"line_start":3959,"line_end":3959,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196998,"byte_end":197006,"line_start":3965,"line_end":3965,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197132,"byte_end":197140,"line_start":3971,"line_end":3971,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197229,"byte_end":197237,"line_start":3977,"line_end":3977,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197386,"byte_end":197392,"line_start":3984,"line_end":3984,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197508,"byte_end":197514,"line_start":3990,"line_end":3990,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197604,"byte_end":197612,"line_start":3996,"line_end":3996,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35296,"byte_end":35303,"line_start":686,"line_end":686,"column_start":21,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35549,"byte_end":35556,"line_start":700,"line_end":700,"column_start":26,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":35677,"byte_end":35684,"line_start":707,"line_end":707,"column_start":21,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":58428,"byte_end":58436,"line_start":1137,"line_end":1137,"column_start":6,"column_end":14},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":64797,"byte_end":64805,"line_start":1284,"line_end":1284,"column_start":6,"column_end":14},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":1271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":65956,"byte_end":65960,"line_start":1336,"line_end":1336,"column_start":34,"column_end":38},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":66121,"byte_end":66129,"line_start":1344,"line_end":1344,"column_start":23,"column_end":31},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":1271},"to":{"krate":2,"index":3333}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":66368,"byte_end":66376,"line_start":1356,"line_end":1356,"column_start":30,"column_end":38},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":66517,"byte_end":66526,"line_start":1364,"line_end":1364,"column_start":6,"column_end":15},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":86952,"byte_end":86958,"line_start":1808,"line_end":1808,"column_start":21,"column_end":27},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":1578},"to":{"krate":2,"index":6702}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119234,"byte_end":119240,"line_start":2404,"line_end":2404,"column_start":6,"column_end":12},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":1972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119631,"byte_end":119637,"line_start":2419,"line_end":2419,"column_start":20,"column_end":26},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":1972},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":119768,"byte_end":119774,"line_start":2426,"line_end":2426,"column_start":13,"column_end":19},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":1972},"to":{"krate":2,"index":1886}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":193549,"byte_end":193557,"line_start":3868,"line_end":3868,"column_start":6,"column_end":14},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":3678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196425,"byte_end":196433,"line_start":3941,"line_end":3941,"column_start":25,"column_end":33},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196553,"byte_end":196561,"line_start":3947,"line_end":3947,"column_start":33,"column_end":41},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196698,"byte_end":196706,"line_start":3953,"line_end":3953,"column_start":28,"column_end":36},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196850,"byte_end":196858,"line_start":3959,"line_end":3959,"column_start":36,"column_end":44},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":196998,"byte_end":197006,"line_start":3965,"line_end":3965,"column_start":28,"column_end":36},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197132,"byte_end":197140,"line_start":3971,"line_end":3971,"column_start":23,"column_end":31},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197229,"byte_end":197237,"line_start":3977,"line_end":3977,"column_start":21,"column_end":29},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197386,"byte_end":197392,"line_start":3984,"line_end":3984,"column_start":33,"column_end":39},"kind":{"Impl":{"id":815}},"from":{"krate":5,"index":4679},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197508,"byte_end":197514,"line_start":3990,"line_end":3990,"column_start":25,"column_end":31},"kind":{"Impl":{"id":816}},"from":{"krate":5,"index":4679},"to":{"krate":2,"index":2042}},{"span":{"file_name":"/Users/hugh/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.25/src/lib.rs","byte_start":197604,"byte_end":197612,"line_start":3996,"line_end":3996,"column_start":21,"column_end":29},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":6702}}]}